{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_6ec35638",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "This should be a local variable, as it gives the same result for all iterations.",
      "range": {
        "startLine": 303,
        "startChar": 22,
        "endLine": 303,
        "endChar": 34
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_62512735",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "yes, it can be stored in a local variable and use in subsequent calls. I am trying to find the benchmark/benefits of this; is there any known way of evaluating the benefits?",
      "parentUuid": "5a93c517_6ec35638",
      "range": {
        "startLine": 303,
        "startChar": 22,
        "endLine": 303,
        "endChar": 34
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fdf2ba04",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "Well, calling a method is always more expensive than using a variable. Here it\u0027s multiplied by the number of iterations. Premature optimization is evil, but this doesn\u0027t mean you don\u0027t have to care about performance at all. Very likely it will be eventually optimized by the JVM, but why not do it right away? You can use JMH to benchmark the difference.",
      "parentUuid": "5a93c517_62512735",
      "range": {
        "startLine": 303,
        "startChar": 22,
        "endLine": 303,
        "endChar": 34
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8ebee2ac",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "There are plenty of frameworks methods that do it.",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 328,
        "endChar": 42
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0244e371",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "I personally always prefer to use java native APIs to achieve desired results and i generally head to use frameworks when java doesn\u0027t provide a direct way of getting things done. I can make the change; just want to understand if that\u0027s the process we are following in all our code.",
      "parentUuid": "5a93c517_8ebee2ac",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 328,
        "endChar": 42
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9d6616ba",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T09:26:44Z",
      "side": 1,
      "message": "Checked with others and I see in ONAP we are ok to use 3rd party libraries if they are making life simple. This was not the approach we used earlier in other core product. I will change the implementation to use the framework lib.",
      "parentUuid": "5a93c517_0244e371",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 328,
        "endChar": 42
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1dae8698",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/main/java/org/openecomp/core/utilities/file/FileUtils.java",
        "patchSetId": 4
      },
      "lineNbr": 328,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "Yes, the general rule is simple: Don\u0027t write what\u0027s been already written. Reasons? Time to write, time to test, probable bugs, copyright violations if pasted from somewhere. There was even a session on doing code reviews that explicitly mentioned it. Most of the popular frameworks for common tasks are already included as Maven dependencies anyway.",
      "parentUuid": "5a93c517_0244e371",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 328,
        "endChar": 42
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0eead2ab",
        "filename": "openecomp-be/lib/openecomp-core-lib/openecomp-utilities-lib/src/test/java/org/openecomp/core/utilities/file/FileUtilsTest.java",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "You could have saved time writing this, as well as unnecessary test in build time, if you had used a framework method.",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 107,
        "endChar": 5
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8e4342ae",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "There are formatting issues in this file",
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_2e2f8ef8",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "Why do you create a new HashMap if it will be replaced anyway? Didn\u0027t static analysis complain about it? I guess a better way would be just return the result:\n\ntry {\n    //...\n    return processToscaYamls(filePaths);\n} finally {\n\n}",
      "range": {
        "startLine": 68,
        "startChar": 6,
        "endLine": 68,
        "endChar": 43
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_424e6b98",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "I had kept the code simple by having return at the end which required it to be initialized. However i agree with your assesment, i will fix this.",
      "parentUuid": "5a93c517_2e2f8ef8",
      "range": {
        "startLine": 68,
        "startChar": 6,
        "endLine": 68,
        "endChar": 43
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9d705641",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "It doesn\u0027t explain. Look at the code - it either always, unconditionally overwrites the \"issues\" variable, or throws an exception, in which case it can\u0027t return anything. And suppose you needed to return an instance - return a sized HashMap or better yet Collections.emptyMap() (immutability is a bonus).",
      "parentUuid": "5a93c517_424e6b98",
      "range": {
        "startLine": 68,
        "startChar": 6,
        "endLine": 68,
        "endChar": 43
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0e017269",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "Why is it done every time? What happens if this is updated concurrently with different values? Can you overwrite somebody else\u0027s configuration by accident?",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 83,
        "endChar": 71
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e27537cb",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "Here I am overriding the SDC parser configuration in SDC application when a Tosca validation process is initiated. There is no use case of it being updated concurrently.",
      "parentUuid": "5a93c517_0e017269",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 83,
        "endChar": 71
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fd571ac8",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T09:26:44Z",
      "side": 1,
      "message": "If i understood correctly, rather than initializing it at every execution it should be done once at application level. Do you want me to move it to a static block?",
      "parentUuid": "5a93c517_e27537cb",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 83,
        "endChar": 71
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_dd933e59",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "Yes, it looks like a one-time initialization. Concurrently doesn\u0027t mean multi-threaded in this case. Just some other code would like to put there other values. Also, I can understand why the configuration manager is intitialized/modified outside. In other words the set() APIs are problematic.",
      "parentUuid": "5a93c517_fd571ac8",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 83,
        "endChar": 71
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_4e321a60",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "I\u0027d combine the two filters using \u0026\u0026",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e2ae972d",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "I have kept them separate from readability perspective. Is there any significant benefit in combining them in to one?",
      "parentUuid": "5a93c517_4e321a60",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9d99367b",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "On the face of it, the stream is traversed once to filter by the first predicate, and then once more to filter the result by the second predicate. I believe you wouldn\u0027t have written two loops with an intermediate result. There are other ways to achieve readability - extract the complex condition to a method, for instance.",
      "parentUuid": "5a93c517_e2ae972d",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0e38923b",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-05T13:01:25Z",
      "side": 1,
      "message": "new BufferedInputStream(new FileInputStream(...)) may work better here.",
      "range": {
        "startLine": 120,
        "startChar": 33,
        "endLine": 120,
        "endChar": 48
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8280f38b",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T07:53:53Z",
      "side": 1,
      "message": "could you please help to explain it better? I tried to research it further but couldn\u0027t find any specific benefits in different approaches in this case.",
      "parentUuid": "5a93c517_0e38923b",
      "range": {
        "startLine": 120,
        "startChar": 33,
        "endLine": 120,
        "endChar": 48
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bd751265",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 2125
      },
      "writtenOn": "2018-03-06T09:26:44Z",
      "side": 1,
      "message": "in this case i see the entire stream is read by Yaml.load in one go. I can change it but just wanted to understand the benefit so that it will not be missed in future.",
      "parentUuid": "5a93c517_8280f38b",
      "range": {
        "startLine": 120,
        "startChar": 33,
        "endLine": 120,
        "endChar": 48
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_dd7a5e23",
        "filename": "openecomp-be/lib/openecomp-tosca-lib/src/main/java/org/openecomp/sdc/tosca/services/impl/ToscaValidationServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-06T11:13:36Z",
      "side": 1,
      "message": "This is what I mean https://stackoverflow.com/a/18600383/3365419. I\u0027m not sure how Yaml.load() is implemented, and I don\u0027t care much because the only thing I know from the API is that it accepts an InputStream that can be attached to any source. On the other hand, I know that in our case it\u0027s a file, and its FileInputStream\u0027s low level operations are expensive.",
      "parentUuid": "5a93c517_bd751265",
      "range": {
        "startLine": 120,
        "startChar": 33,
        "endLine": 120,
        "endChar": 48
      },
      "revId": "f1daa3b843460cab6adf8b82fff5f4455201282e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}