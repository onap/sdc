{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_bf01a506",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-api/src/main/java/org/openecomp/sdc/logging/api/AuditData.java",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "This is not a correct Javadoc format",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c5be2065",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-api/src/main/java/org/openecomp/sdc/logging/api/AuditData.java",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "This to be compared to metrics data. It seems like we should go for the builder pattern here for a few reasons: 1) it will save the need to implement AuditData every time; 2) it will support gracefully addition of new field - they will be just added without forcing the existing clients who implement the interface to fix their implementation.",
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e5c31ceb",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-api/src/main/java/org/openecomp/sdc/logging/api/AuditData.java",
        "patchSetId": 13
      },
      "lineNbr": 49,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "It\u0027s a public API, Javadoc is needed here.",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_45b21095",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-core/src/main/java/org/openecomp/sdc/logging/slf4j/SLF4JLoggerWrapper.java",
        "patchSetId": 13
      },
      "lineNbr": 98,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "It\u0027s reasonable to require a non-null value here.",
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_65af0c2b",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-core/src/main/java/org/openecomp/sdc/logging/slf4j/SLF4JLoggerWrapper.java",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "We wanted to skip the instantiation of Date here. DATE_FORMAT.format(data.getStartTime()) should work fine.",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 103,
        "endChar": 82
      },
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_25a58446",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-core/src/main/java/org/openecomp/sdc/logging/slf4j/SLF4JLoggerWrapper.java",
        "patchSetId": 13
      },
      "lineNbr": 107,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "Problematic. 1) Right now it\u0027s redundant, we can just use data.getStatusCode().name(); 2) It\u0027s incorrect to assume that anything other than COMPLETE is ERROR. Can be easily broken. If you insist on having a mapping, and there\u0027s no mapping for a value, just use it \"as is\" (.name());",
      "range": {
        "startLine": 107,
        "startChar": 54,
        "endLine": 107,
        "endChar": 109
      },
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c565c01e",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-core/src/main/java/org/openecomp/sdc/logging/slf4j/SLF4JLoggingServiceProvider.java",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "Can it be package private?",
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_4579b0c6",
        "filename": "openecomp-be/lib/openecomp-sdc-logging-lib/openecomp-sdc-logging-core/src/main/java/org/openecomp/sdc/logging/slf4j/SLF4JLoggingServiceProvider.java",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-02-27T07:28:35Z",
      "side": 1,
      "message": "These don\u0027t seem in use.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 37,
        "endChar": 90
      },
      "revId": "28cb62d85c6b286316398d6ef803a4ab3b080ca5",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}