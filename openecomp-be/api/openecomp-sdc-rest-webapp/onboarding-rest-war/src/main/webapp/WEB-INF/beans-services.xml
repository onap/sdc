<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <!-- CXF -->
    <context:component-scan base-package="org.openecomp.sdcrests"/>
    <!-- Needed for JSR-303 validations. May be removed when moving to JAX-RS 2.0 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- Needed for JSR-303 validations. May be removed when moving to JAX-RS 2.0 -->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

    <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationInclusion" value="NON_NULL"/>
    </bean>

    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">
        <property name="mapper" ref="jacksonObjectMapper"/>
    </bean>

    <bean id="outEmptyResponseInterceptor" class="org.openecomp.server.interceptors.EmptyOutputOutInterceptor"/>

    <!-- ASDC -->
    <bean id="uploadValidationManager" class="org.openecomp.sdc.validation.impl.UploadValidationManagerImpl"/>
    <bean id="actionManager" class="org.openecomp.sdc.action.impl.ActionManagerImpl"/>
    <bean id="applicationConfigManager" class="org.openecomp.sdc.applicationconfig.impl.ApplicationConfigManagerImpl"/>

    <!-- aspect beans -->
    <bean id = "debugAspect" class="org.openecomp.sdc.logging.aspects.DebugAspect"/>
    <bean id = "healthCheck" class="org.openecomp.sdcrests.health.rest.services.HealthCheckImpl"/>
    <!--aop:config>
        < aspect pointcuts>
        <aop:pointcut id="loggingDebugPointcut" expression="execution(* org.openecomp.sdc.*.*.*(..))"/>

        <advices>
        <aop:aspect id="logDebugAspect" ref="debugAspect">
            <aop:before pointcut-ref="loggingDebugPointcut" method="debugEnterMethod"/>
            <aop:after-returning pointcut-ref="loggingDebugPointcut" method="debugExitMethod"/>
        </aop:aspect>
    </aop:config-->




    <!-- RESTful Services -->
    <jaxrs:server id="restContainer" address="/">

        <jaxrs:serviceBeans>
            <ref bean="vendorLicenseModels"/>
            <ref bean="licenseAgreements"/>
            <ref bean="featureGroups"/>
            <ref bean="entitlementPools"/>
            <ref bean="entitlementPoolLimits"/>
            <ref bean="licenseKeyGroups"/>
            <ref bean="licenseKeyGroupLimits"/>
            <ref bean="vendorSoftwareProducts"/>
            <ref bean="networks"/>
            <ref bean="components"/>
            <ref bean="nics"/>
            <ref bean="computes"/>
            <ref bean="processes"/>
            <ref bean="componentProcesses"/>
            <ref bean="validation"/>
            <ref bean="actions"/>
            <ref bean="applicationConfiguration"/>
            <ref bean="componentMonitoringUploads"/>
            <ref bean="deploymentFlavors"/>
	        <ref bean="images"/>
            <ref bean="orchestrationTemplateCandidate"/>
	    <ref bean="vnfPackageRepository"/>
            <ref bean="componentDependencyModel"/>
            <ref bean="activityLog"/>
            <ref bean="healthCheck"/>
        </jaxrs:serviceBeans>

        <jaxrs:providers>
            <ref bean="jsonProvider"/>
            <bean class="org.openecomp.sdc.action.errors.ActionExceptionMapper"/>
            <bean class="org.openecomp.sdcrests.errors.DefaultExceptionMapper"/>
        </jaxrs:providers>

        <jaxrs:outInterceptors>
            <ref bean="outEmptyResponseInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

</beans>