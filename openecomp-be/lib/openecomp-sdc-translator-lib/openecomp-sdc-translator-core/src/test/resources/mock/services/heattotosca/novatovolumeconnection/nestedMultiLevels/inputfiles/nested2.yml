heat_template_version: 2013-05-23

description: nested2

parameters:
  p1:
    type: string
    description: UID of OAM network
  p2:
    type: string
    description: UID of OAM network
  security_group_name:
    type: comma_delimited_list
    description: CMAUI1, CMAUI2 server names
  cmaui_names:
    type: comma_delimited_list
    description: CMAUI1, CMAUI2 server names
  cmaui_image:
    type: string
    description: Image for CMAUI server
  availability_zone_0:
    type: string
    label: availabilityzone name
    description: availabilityzone name
  cmaui_flavor:
    type: string
    description: Flavor for CMAUI server
  cmaui_oam_ips:
      type: string
resources:

  cmaui_volume_attachment4:
     type: OS::Cinder::VolumeAttachment
     properties:
       volume_id: {get_param: p1}
       instance_uuid: {get_resource: server_cmaui3}

  cmaui_volume_attachment5:
     type: OS::Cinder::VolumeAttachment
     properties:
       volume_id: {get_param: p2}
       instance_uuid: {get_resource: server_cmaui3}

  cmaui_volume_attachment6:
     type: OS::Cinder::VolumeAttachment
     properties:
       volume_id: {get_param: p1}
       instance_uuid: {get_resource: server_cmaui4}

  cmaui_port_3:
    type: OS::Neutron::Port
    properties:
      network: { get_param: p1 }
      fixed_ips: [{"ip_address": {get_param: [cmaui_oam_ips, 0]}}]
      security_groups: [{get_param: security_group_name}]
      replacement_policy: AUTO

  cmaui_port_4:
    type: OS::Neutron::Port
    properties:
      network: { get_param: p2 }
      fixed_ips: [{"ip_address": {get_param: [cmaui_oam_ips, 0]}}]
      security_groups: [{get_param: security_group_name}]
      replacement_policy: AUTO

  server_cmaui3:
    type: OS::Nova::Server
    properties:
      name: { get_param: [cmaui_names, 0]}
      image: { get_param: cmaui_image }
      availability_zone: { get_param: availability_zone_0 }
      flavor: { get_param: cmaui_flavor }
      networks:
      - port: { get_resource: cmaui_port_3 }

  server_cmaui4:
    type: OS::Nova::Server
    properties:
      name: { get_param: [cmaui_names, 0]}
      image: { get_param: cmaui_image }
      availability_zone: { get_param: availability_zone_0 }
      flavor: { get_param: cmaui_flavor }
      networks:
      - port: { get_resource: cmaui_port_4 }

  test_nested3Level:
    type: OS::Heat::ResourceGroup
    properties:
      count: 3
      resource_def:
        type: nested3.yml
        properties:
          p1: { get_param: p1}
          p2: { get_param: p1}
          indx: "%index%"