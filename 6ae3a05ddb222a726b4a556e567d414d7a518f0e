{
  "comments": [
    {
      "key": {
        "uuid": "67b9ae75_0ffa4723",
        "filename": "common-app-api/src/main/java/org/openecomp/sdc/common/zip/ZipUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 5565
      },
      "writtenOn": "2021-08-12T13:07:27Z",
      "side": 1,
      "message": "why not just call the previous checkForZipSlipInRead?",
      "range": {
        "startLine": 264,
        "startChar": 38,
        "endLine": 264,
        "endChar": 72
      },
      "revId": "6ae3a05ddb222a726b4a556e567d414d7a518f0e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62ce403e_221520a8",
        "filename": "common-app-api/src/main/java/org/openecomp/sdc/common/zip/ZipUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 5629
      },
      "writtenOn": "2021-08-12T13:15:27Z",
      "side": 1,
      "message": "I tried but as you can see here (https://sonarcloud.io/project/issues?fileUuids\u003dAXsrUrJgnWkaakhX_EUS\u0026id\u003dafribeiro_sdc\u0026open\u003dAXsrUuzanWkaakhX_F2Z\u0026resolved\u003dfalse\u0026types\u003dVULNERABILITY) it would not solve this issue.",
      "parentUuid": "67b9ae75_0ffa4723",
      "range": {
        "startLine": 264,
        "startChar": 38,
        "endLine": 264,
        "endChar": 72
      },
      "revId": "6ae3a05ddb222a726b4a556e567d414d7a518f0e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e824bd7c_6c561a1e",
        "filename": "common-app-api/src/main/java/org/openecomp/sdc/common/zip/ZipUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 5565
      },
      "writtenOn": "2021-08-12T13:45:52Z",
      "side": 1,
      "message": "I believe it is because you continue to write the original file path.\nhttps://sonarcloud.io/code?id\u003dafribeiro_sdc\u0026selected\u003dafribeiro_sdc%3Acommon-app-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fopenecomp%2Fsdc%2Fcommon%2Fzip%2FZipUtils.java\u0026line\u003d263\n\nIt seems you need the canonical path of the file to validate and write. Why not do that in separate methods?\nMaybe one to sanitize the path (returning the canonical form) and other to check for the zip slip.\nI understand that it works. I just don\u0027t like the mix of the need to write with the canonical path and the zip slip validation.",
      "parentUuid": "62ce403e_221520a8",
      "range": {
        "startLine": 264,
        "startChar": 38,
        "endLine": 264,
        "endChar": 72
      },
      "revId": "6ae3a05ddb222a726b4a556e567d414d7a518f0e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61a24b64_d2e59925",
        "filename": "common-app-api/src/main/java/org/openecomp/sdc/common/zip/ZipUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 5629
      },
      "writtenOn": "2021-08-13T14:53:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e824bd7c_6c561a1e",
      "range": {
        "startLine": 264,
        "startChar": 38,
        "endLine": 264,
        "endChar": 72
      },
      "revId": "6ae3a05ddb222a726b4a556e567d414d7a518f0e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}