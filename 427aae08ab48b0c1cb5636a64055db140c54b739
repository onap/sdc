{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_7fbea7af",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/rest/mapping/MapActivitySpecRequestDtoToActivitySpecEntity.java",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "These mappings are complex and error-prone, without any business logic. They require unit-test but don\u0027t have ones. At the same time experience shows this code can be easily broken. Can we find a way to get rid of these mappers for activity spec? Can the same DTO be reused? If I understand correctly, boilerplate code like this constitutes a large part of this commit.",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1f08c390",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/rest/types/ActivitySpecActionRequestDto.java",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "See if you want to use project lombok https://projectlombok.org/ for the DTOs.",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7fec67bb",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Doesn\u0027t make much sense to depend on sdcrests here.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 59
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_ff007767",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Avoid casting to HttpServletRequest/HttpServletResponse every time you need it. Do it once at the beginning, and then use a local variable of the right type.",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9ffb7378",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Is this ErrorCode mechanism really required, or a copy-cat from similar code? I think you could have just used a plain String (looking at the code down the road).",
      "range": {
        "startLine": 57,
        "startChar": 6,
        "endLine": 60,
        "endChar": 31
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bff66f8d",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Please use standard Java constants for these.",
      "range": {
        "startLine": 61,
        "startChar": 57,
        "endLine": 61,
        "endChar": 90
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5ff16b93",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "This is not a good response code in this situation. Please review HTTP response codes to find a suitable one.",
      "range": {
        "startLine": 62,
        "startChar": 57,
        "endLine": 62,
        "endChar": 97
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1f2f63f8",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/filters/ActivitySpecSessionContextFilter.java",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "It\u0027s always the same structure - there\u0027s no dynamic logic here. It would make sense to make the error response a constant and save the creation of ObjectMapper, error, conversion, etc.",
      "range": {
        "startLine": 63,
        "startChar": 46,
        "endLine": 64,
        "endChar": 47
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3f325f5f",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/interceptors/DefaultOutput.java",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "This class looks like a copy-cat, too. Is it needed? Could you find a 3rd-party library that implements it? If you feel this should be made reusable in SDC - extract it to a shared library instead of copying \"as is\". It may also violate someone else\u0027s license.\n\nhttps://alvinalexander.com/java/jwarehouse/apache-cxf/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java.shtml",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_df349b4b",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/api/server/listeners/ActivitySpecAppStartupListener.java",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "I\u0027ve already seen it before. Should these be made constants?",
      "range": {
        "startLine": 32,
        "startChar": 74,
        "endLine": 33,
        "endChar": 23
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9f4293ac",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/dao/types/ActivitySpecEntity.java",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Why is it needed, if it\u0027s the only one? The words \"//Default constructor\" don\u0027t tell much.",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bf3d0f2d",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/datatypes/ActivitySpecConstant.java",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "This one do require explanation. I\u0027m sure SonarLint won\u0027t let it pass.",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5f488bcb",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/datatypes/ActivitySpecData.java",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Why create an instance if it will be probably overwritten by a set()?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 76
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7f4307af",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/datatypes/ActivitySpecParameter.java",
        "patchSetId": 7
      },
      "lineNbr": 24,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Doesn\u0027t explain much.",
      "range": {
        "startLine": 24,
        "startChar": 33,
        "endLine": 24,
        "endChar": 56
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1f1683a8",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/datatypes/ElementType.java",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "This violates Java naming conventions. Also, why do you need an enum with only one value?",
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3f19ffd6",
        "filename": "services/activity-spec/activity-spec-web/activity-spec-service/src/main/java/org/openecomp/activityspec/be/datatypes/ItemType.java",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 329
      },
      "writtenOn": "2018-03-04T14:19:15Z",
      "side": 1,
      "message": "Violates naming conventions. Why do you need an enum that only has a single value?",
      "range": {
        "startLine": 20,
        "startChar": 2,
        "endLine": 20,
        "endChar": 14
      },
      "revId": "427aae08ab48b0c1cb5636a64055db140c54b739",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}