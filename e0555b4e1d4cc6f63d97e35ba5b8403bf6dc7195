{
  "comments": [
    {
      "key": {
        "uuid": "7306a2c9_b43b4448",
        "filename": "catalog-model/src/main/java/org/openecomp/sdc/be/model/operations/impl/CapabilityTypeOperation.java",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 5269
      },
      "writtenOn": "2021-08-13T13:16:58Z",
      "side": 1,
      "message": "This will already have been checked by the code you introduced in createCapabilityTypesFromYml in CapabilityTypeImportManager so is superflous here.\nSame comment for other types",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 40
      },
      "revId": "e0555b4e1d4cc6f63d97e35ba5b8403bf6dc7195",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "295e5aef_53cb56eb",
        "filename": "catalog-model/src/main/java/org/openecomp/sdc/be/model/operations/impl/CapabilityTypeOperation.java",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 6710
      },
      "writtenOn": "2021-08-13T13:58:34Z",
      "side": 1,
      "message": "Hi Michael, this was the initial implementation done and test cases added based on this code here. Then Andre identified the need of this check in  CapabilityTypeImportManager to avoid the type creation with invalid model. So we decided to keep the check in both places. I can remove this, if its still recommended.",
      "parentUuid": "7306a2c9_b43b4448",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 40
      },
      "revId": "e0555b4e1d4cc6f63d97e35ba5b8403bf6dc7195",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd97c2a4_b30405dd",
        "filename": "catalog-model/src/main/java/org/openecomp/sdc/be/model/operations/impl/CapabilityTypeOperation.java",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 5269
      },
      "writtenOn": "2021-08-13T14:38:12Z",
      "side": 1,
      "message": "In my opinion its only adding bloat to the code without any benefit to check twice so I would say remove it from here. \nDiscuss with Andre before removing though just in case he sees some benefit I am missing",
      "parentUuid": "295e5aef_53cb56eb",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 40
      },
      "revId": "e0555b4e1d4cc6f63d97e35ba5b8403bf6dc7195",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "479a406a_6616d49e",
        "filename": "catalog-model/src/main/java/org/openecomp/sdc/be/model/operations/impl/CapabilityTypeOperation.java",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 5565
      },
      "writtenOn": "2021-08-13T14:59:01Z",
      "side": 1,
      "message": "We can remove if wanted. It is really a double check to guarantee the integrity. This is the part of the code that creates the model relation, and we are not sure if all the entrypoints of it are making sure that the model is valid. As it was already implemented, I thought in leaving there for safety.\nI believe this could be extracted to a ModelOperation class, having a central place for creating the model relationship.",
      "parentUuid": "cd97c2a4_b30405dd",
      "range": {
        "startLine": 198,
        "startChar": 2,
        "endLine": 199,
        "endChar": 40
      },
      "revId": "e0555b4e1d4cc6f63d97e35ba5b8403bf6dc7195",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}