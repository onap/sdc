tosca.datatypes.Root:
  description: The TOSCA root Data Type all other TOSCA base Data Types derive from

integer:
  derived_from: tosca.datatypes.Root

string:
  derived_from: tosca.datatypes.Root

boolean:
  derived_from: tosca.datatypes.Root

float:
  derived_from: tosca.datatypes.Root

list:
  derived_from: tosca.datatypes.Root

map:
  derived_from: tosca.datatypes.Root

json:
  derived_from: tosca.datatypes.Root

scalar-unit:
  derived_from: tosca.datatypes.Root

scalar-unit.size:
  derived_from: scalar-unit

scalar-unit.time:
  derived_from: scalar-unit

scalar-unit.frequency:
  derived_from: scalar-unit

tosca.datatypes.Credential:
  derived_from: tosca.datatypes.Root
  properties:
    protocol:
      type: string
      required: false
    token_type:
      type: string
      default: password
    token:
      type: string
    keys:
      type: map
      required: false
      entry_schema:
        type: string
    user:
      type: string
      required: false

org.openecomp.datatypes.PortMirroringConnectionPointDescription:
  derived_from: tosca.datatypes.Root
  properties:
    nf_naming_code:
      type: string
    nfc_naming_code:
      type: string
    network_role:
      type: string
    pps_capacity:
      type: string
    nf_type:
      type: string
      description: deprecated
    nfc_type:
      type: string
      description: deprecated

tosca.datatypes.TimeInterval:
  derived_from: tosca.datatypes.Root
  properties:
    start_time:
      type: timestamp
      required: true
    end_time:
      type: timestamp
      required: true

tosca.datatypes.network.NetworkInfo:
  derived_from: tosca.datatypes.Root
  properties:
    network_name:
      type: string
    network_id:
      type: string
    addresses:
      type: list
      entry_schema:
        type: string

tosca.datatypes.network.PortInfo:
  derived_from: tosca.datatypes.Root
  properties:
    port_name:
      type: string
    port_id:
      type: string
    network_id:
      type: string
    mac_address:
      type: string
    addresses:
      type: list
      entry_schema:
        type: string

tosca.datatypes.network.PortDef:
  derived_from: integer
  constraints:
    - in_range: [ 1, 65535 ]

tosca.datatypes.network.PortSpec:
  derived_from: tosca.datatypes.Root
  properties:
    protocol:
      type: string
      required: true
      default: tcp
      constraints:
        - valid_values: [ udp, tcp, igmp ]
    target:
      type: tosca.datatypes.network.PortDef
    target_range:
      type: range
      constraints:
        - in_range: [ 1, 65535 ]
    source:
      type: tosca.datatypes.network.PortDef
    source_range:
      type: range
      constraints:
        - in_range: [ 1, 65535 ]

###################new Data Types Onboarding Integration##########################

org.openecomp.datatypes.heat.network.AddressPair:
  derived_from: tosca.datatypes.Root
  description: MAC/IP address pairs
  properties:
    mac_address:
      type: string
      description: MAC address
      required: false
      status: supported
    ip_address:
      type: string
      description: IP address
      required: false
      status: supported

org.openecomp.datatypes.heat.network.subnet.HostRoute:
  derived_from: tosca.datatypes.Root
  description: Host route info for the subnet
  properties:
    destination:
      type: string
      description: The destination for static route
      required: false
      status: supported
    nexthop:
      type: string
      description: The next hop for the destination
      required: false
      status: supported

org.openecomp.datatypes.heat.network.AllocationPool:
  derived_from: tosca.datatypes.Root
  description: The start and end addresses for the allocation pool
  properties:
    start:
      type: string
      description: Start address for the allocation pool
      required: false
      status: supported
    end:
      type: string
      description: End address for the allocation pool
      required: false
      status: supported

org.openecomp.datatypes.heat.network.neutron.Subnet:
  derived_from: tosca.datatypes.Root
  description: A subnet represents an IP address block that can be used for assigning IP addresses to virtual instances
  properties:
    tenant_id:
      type: string
      description: The ID of the tenant who owns the network
      required: false
      status: supported
    enable_dhcp:
      type: boolean
      description: Set to true if DHCP is enabled and false if DHCP is disabled
      required: false
      default: true
      status: supported
    ipv6_address_mode:
      type: string
      description: IPv6 address mode
      required: false
      status: supported
      constraints:
      - valid_values:
        - dhcpv6-stateful
        - dhcpv6-stateless
        - slaac
    ipv6_ra_mode:
      type: string
      description: IPv6 RA (Router Advertisement) mode
      required: false
      status: supported
      constraints:
      - valid_values:
        - dhcpv6-stateful
        - dhcpv6-stateless
        - slaac
    value_specs:
      type: map
      description: Extra parameters to include in the request
      required: false
      default: {}
      status: supported
      entry_schema:
        type: string
    allocation_pools:
       type: list
       description: The start and end addresses for the allocation pools
       required: false
       status: supported
       entry_schema:
         type: org.openecomp.datatypes.heat.network.AllocationPool
    subnetpool:
      type: string
      description: The name or ID of the subnet pool
      required: false
      status: supported
    dns_nameservers:
      type: list
      description: A specified set of DNS name servers to be used
      required: false
      default: []
      status: supported
      entry_schema:
        type: string
    host_routes:
      type: list
      description: The gateway IP address
      required: false
      status: supported
      entry_schema:
        type: org.openecomp.datatypes.heat.network.subnet.HostRoute
    ip_version:
      type: integer
      description: The gateway IP address
      required: false
      default: 4
      status: supported
      constraints:
      - valid_values:
        - '4'
        - '6'
    name:
      type: string
      description: The name of the subnet
      required: false
      status: supported
    prefixlen:
      type: integer
      description: Prefix length for subnet allocation from subnet pool
      required: false
      status: supported
      constraints:
      - greater_or_equal: 0
    cidr:
      type: string
      description: The CIDR
      required: false
      status: supported
    gateway_ip:
      type: string
      description: The gateway IP address
      required: false
      status: supported

org.openecomp.datatypes.heat.novaServer.network.PortExtraProperties:
  derived_from: tosca.datatypes.Root
  description: Nova server network expand properties for port
  properties:
    port_security_enabled:
      type: boolean
      description: Flag to enable/disable port security on the port
      required: false
      status: supported
    mac_address:
      type: string
      description: MAC address to give to this port
      required: false
      status: supported
    admin_state_up:
      type: boolean
      description: The administrative state of this port
      required: false
      default: true
      status: supported
    qos_policy:
      type: string
      description: The name or ID of QoS policy to attach to this port
      required: false
      status: supported
    allowed_address_pairs:
      type: list
      description: Additional MAC/IP address pairs allowed to pass through the port
      required: false
      status: supported
      entry_schema:
        type: org.openecomp.datatypes.heat.network.AddressPair
    binding:vnic_type:
      type: string
      description: The vnic type to be bound on the neutron port
      required: false
      status: supported
      constraints:
      - valid_values:
        - macvtap
        - direct
        - normal
    value_specs:
      type: map
      description: Extra parameters to include in the request
      required: false
      default: {}
      status: supported
      entry_schema:
        type: string

org.openecomp.datatypes.heat.novaServer.network.AddressInfo:
  derived_from: tosca.datatypes.network.NetworkInfo
  description: Network addresses with corresponding port id
  properties:
    port_id:
      type: string
      description: Port id
      required: false
      status: supported

org.openecomp.datatypes.heat.neutron.port.FixedIps:
  derived_from: tosca.datatypes.Root
  description: subnet/ip_address
  properties:
    subnet:
      type: string
      description: Subnet in which to allocate the IP address for this port
      required: false
      status: supported
    ip_address:
      type: string
      description: IP address desired in the subnet for this port
      required: false
      status: supported
    subnet_id:
      type: string
      description: Subnet in which to allocate the IP address for this port
      required: false
      status: supported

org.openecomp.datatypes.heat.FileInfo:
  derived_from: tosca.datatypes.Root
  description: Heat File Info
  properties:
    file:
      type: string
      description: The required URI string (relative or absolute) which can be used to locate the file
      required: true
      status: supported
    file_type:
      type: string
      description: The type of the file
      required: true
      status: supported
      constraints:
      - valid_values:
        - base
        - env
        - volume
        - network

org.openecomp.datatypes.heat.contrail.network.rule.PortPairs:
    derived_from: tosca.datatypes.Root
    description: source and destination port pairs
    properties:
      start_port:
        type: string
        description: Start port
        required: false
        status: supported
      end_port:
        type: string
        description: End port
        required: false
        status: supported

org.openecomp.datatypes.heat.contrail.network.rule.Rule:
    derived_from: tosca.datatypes.Root
    description: policy rule
    properties:
      src_ports:
        type: list
        description: Source ports
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrail.network.rule.PortPairs
      protocol:
        type: string
        description: Protocol
        required: false
        status: supported
      dst_addresses:
        type: list
        description: Destination addresses
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrail.network.rule.VirtualNetwork
      apply_service:
        type: string
        description: Service to apply
        required: false
        status: supported
      dst_ports:
        type: list
        description: Destination ports
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrail.network.rule.PortPairs
      src_addresses:
        type: list
        description: Source addresses
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrail.network.rule.VirtualNetwork
      direction:
        type: string
        description: Direction
        required: false
        status: supported

org.openecomp.datatypes.heat.contrail.network.rule.RuleList:
    derived_from: tosca.datatypes.Root
    description: list of policy rules
    properties:
      policy_rule:
        type: list
        description: Contrail network rule
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrail.network.rule.Rule

org.openecomp.datatypes.heat.contrail.network.rule.VirtualNetwork:
    derived_from: tosca.datatypes.Root
    description: source and destination addresses
    properties:
      virtual_network:
        type: string
        description: Virtual network
        required: false
        status: supported

org.openecomp.datatypes.heat.network.neutron.SecurityRules.Rule:
    derived_from: tosca.datatypes.Root
    description: Rules Pairs
    properties:
      remote_group_id:
        type: string
        description: The remote group ID to be associated with this security group rule
        required: false
        status: supported
      protocol:
        type: string
        description: The protocol that is matched by the security group rule
        required: false
        status: supported
        constraints:
        - valid_values:
          - tcp
          - udp
          - icmp
      ethertype:
        type: string
        description: Ethertype of the traffic
        required: false
        default: IPv4
        status: supported
        constraints:
        - valid_values:
          - IPv4
          - IPv6
      port_range_max:
        type: integer
        description: 'The maximum port number in the range that is matched by the security group rule. '
        required: false
        status: supported
        constraints:
        - in_range:
          - 0
          - 65535
      remote_ip_prefix:
        type: string
        description: The remote IP prefix (CIDR) to be associated with this security group rule
        required: false
        status: supported
      remote_mode:
        type: string
        description: Whether to specify a remote group or a remote IP prefix
        required: false
        default: remote_ip_prefix
        status: supported
        constraints:
        - valid_values:
          - remote_ip_prefix
          - remote_group_id
      direction:
        type: string
        description: The direction in which the security group rule is applied
        required: false
        default: ingress
        status: supported
        constraints:
        - valid_values:
          - egress
          - ingress
      port_range_min:
        type: integer
        description: The minimum port number in the range that is matched by the security group rule.
        required: false
        status: supported
        constraints:
        - in_range:
          - 0
          - 65535

org.openecomp.datatypes.heat.substitution.SubstitutionFiltering:
    derived_from: tosca.datatypes.Root
    description: Substitution Filter
    properties:
      substitute_service_template:
        type: string
        description: Substitute Service Template
        required: true
        status: supported
      index_value:
        type: integer
        description: Index value of the substitution service template runtime instance
        required: false
        default: 0
        status: supported
        constraints:
        - greater_or_equal: 0
      count:
        type: string
        description: Count
        required: false
        default: 1
        status: supported
      scaling_enabled:
        type: boolean
        description: Indicates whether service scaling is enabled
        required: false
        default: true
        status: supported
      mandatory:
        type: boolean
        description: Mandatory
        required: false
        default: true
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.RefDataSequence:
    derived_from: tosca.datatypes.Root
    description: network policy refs data sequence
    properties:
      network_policy_refs_data_sequence_major:
        type: integer
        description: Network Policy ref data sequence Major
        required: false
        status: supported
      network_policy_refs_data_sequence_minor:
        type: integer
        description: Network Policy ref data sequence Minor
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.RefData:
    derived_from: tosca.datatypes.Root
    description: network policy refs data
    properties:
      network_policy_refs_data_sequence:
        type: org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.RefDataSequence
        description: Network Policy ref data sequence
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.ref.data.IpamSubnet:
    derived_from: tosca.datatypes.Root
    description: Network Ipam Ref Data Subnet
    properties:
      network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len:
        type: string
        description: Network ipam refs data ipam subnets ip prefix len
        required: false
        status: supported
      network_ipam_refs_data_ipam_subnets_subnet_ip_prefix:
        type: string
        description: Network ipam refs data ipam subnets ip prefix
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.ref.data.IpamSubnetList:
    derived_from: tosca.datatypes.Root
    description: Network Ipam Ref Data Subnet List
    properties:
      network_ipam_refs_data_ipam_subnets_subnet:
        type: org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.ref.data.IpamSubnet
        description: Network ipam refs data ipam subnets
        required: false
        status: supported
      network_ipam_refs_data_ipam_subnets_addr_from_start:
        type: string
        description: Network ipam refs data ipam subnets addr from start
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.IpamRefData:
    derived_from: tosca.datatypes.Root
    description: Network Ipam Ref Data
    properties:
      network_ipam_refs_data_ipam_subnets:
        type: list
        description: Network ipam refs data ipam subnets
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.virtual.network.rule.ref.data.IpamSubnetList

org.openecomp.datatypes.heat.contrailV2.network.rule.SrcVirtualNetwork:
    derived_from: tosca.datatypes.Root
    description: source addresses
    properties:
      network_policy_entries_policy_rule_src_addresses_virtual_network:
        type: string
        description: Source addresses Virtual network
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.network.rule.DstVirtualNetwork:
    derived_from: tosca.datatypes.Root
    description: destination addresses
    properties:
      network_policy_entries_policy_rule_dst_addresses_virtual_network:
        type: string
        description: Destination addresses Virtual network
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.network.rule.DstPortPairs:
    derived_from: tosca.datatypes.Root
    description: destination port pairs
    properties:
      network_policy_entries_policy_rule_dst_ports_start_port:
        type: string
        description: Start port
        required: false
        status: supported
      network_policy_entries_policy_rule_dst_ports_end_port:
        type: string
        description: End port
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.network.rule.SrcPortPairs:
    derived_from: tosca.datatypes.Root
    description: source port pairs
    properties:
      network_policy_entries_policy_rule_src_ports_start_port:
        type: string
        description: Start port
        required: false
        status: supported
      network_policy_entries_policy_rule_src_ports_end_port:
        type: string
        description: End port
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.network.rule.ActionList:
    derived_from: tosca.datatypes.Root
    description: Action List
    properties:
      network_policy_entries_policy_rule_action_list_simple_action:
        type: string
        description: Simple Action
        required: false
        status: supported
      network_policy_entries_policy_rule_action_list_apply_service:
        type: list
        description: Apply Service
        required: false
        status: supported
        entry_schema:
          type: string

org.openecomp.datatypes.heat.contrailV2.network.rule.Rule:
    derived_from: tosca.datatypes.Root
    description: policy rule
    properties:
      network_policy_entries_policy_rule_dst_addresses:
        type: list
        description: Destination addresses
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.network.rule.DstVirtualNetwork
      network_policy_entries_policy_rule_dst_ports:
        type: list
        description: Destination ports
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.network.rule.DstPortPairs
      network_policy_entries_policy_rule_protocol:
        type: string
        description: Protocol
        required: false
        status: supported
      network_policy_entries_policy_rule_src_addresses:
        type: list
        description: Source addresses
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.network.rule.SrcVirtualNetwork
      network_policy_entries_policy_rule_direction:
        type: string
        description: Direction
        required: false
        status: supported
      network_policy_entries_policy_rule_src_ports:
        type: list
        description: Source ports
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.network.rule.SrcPortPairs
      network_policy_entries_policy_rule_action_list:
        type: org.openecomp.datatypes.heat.contrailV2.network.rule.ActionList
        description: Action list
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.network.rule.RuleList:
    derived_from: tosca.datatypes.Root
    description: list of policy rules
    properties:
      network_policy_entries_policy_rule:
        type: list
        description: Contrail network rule
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.contrailV2.network.rule.Rule

org.openecomp.datatypes.heat.network.contrail.port.StaticRoute:
    derived_from: tosca.datatypes.Root
    description: static route
    properties:
      prefix:
        type: string
        description: Route prefix
        required: false
        status: supported
      next_hop:
        type: string
        description: Next hop
        required: false
        status: supported
      next_hop_type:
        type: string
        description: Next hop type
        required: false
        status: supported

org.openecomp.datatypes.heat.network.contrail.AddressPair:
    derived_from: tosca.datatypes.Root
    description: Address Pair
    properties:
      address_mode:
        type: string
        description: Address mode active-active or active-standy
        required: false
        status: supported
        constraints:
        - valid_values:
          - active-active
          - active-standby
      prefix:
        type: string
        description: IP address prefix
        required: false
        status: supported
      mac_address:
        type: string
        description: Mac address
        required: false
        status: supported

org.openecomp.datatypes.heat.network.contrail.InterfaceData:
    derived_from: tosca.datatypes.Root
    description: Interface Data
    properties:
      static_routes:
        type: list
        description: An ordered list of static routes to be added to this interface
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.network.contrail.port.StaticRoute
      virtual_network:
        type: string
        description: Virtual Network for this interface
        required: true
        status: supported
      allowed_address_pairs:
        type: list
        description: List of allowed address pair for this interface
        required: false
        status: supported
        entry_schema:
          type: org.openecomp.datatypes.heat.network.contrail.AddressPair
      ip_address:
        type: string
        description: IP for this interface
        required: false
        status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.machine.interface.Properties:
    derived_from: tosca.datatypes.Root
    description: Virtual Machine Interface Properties.
    properties:
      virtual_machine_interface_properties_service_interface_type:
        type: string
        description: Service Interface Type.
        required: false
        status: supported

org.openecomp.datatypes.Root:
  derived_from: tosca.datatypes.Root
  description: >
    The ECOMP root Data Type all other Data Types derive from
  properties:
    supplemental_data:
      type: map
      entry_schema:
        description: >
           A placeholder for missing properties that would be included in future ecomp model versions.
           fromat <key>:<value>
        type: string

org.openecomp.datatypes.AssignmentRequirements:
  derived_from: org.openecomp.datatypes.Root
  properties:
    is_required:
      description: |
        "true" indicates that assignment is required
      type: boolean
      default: false
      required: true
    count:
      description: number of assignments required
      type: integer
      required: false

org.openecomp.datatypes.network.SubnetAssignments:
  derived_from: org.openecomp.datatypes.Root
  properties:
    ip_network_address_plan:
      type: string
      required: false
      description: Reference to EIPAM, VLAN or other address plan ID used to assign subnets to this network
    dhcp_enabled:
      type: boolean
      required: false
      description: \"true\" indicates the network has 1 or more policies
    ip_version:
      type: integer
      constraints:
        - valid_values: [4,6]
      required: true
      description: The IP version of the subnet
    cidr_mask:
      type: integer
      required: true
      description: The default subnet CIDR mask
    min_subnets_count:
      type: integer
      default: 1
      required: true
      description: Quantity of subnets that must be initially assigned

org.openecomp.datatypes.network.IPv4SubnetAssignments:
  derived_from: org.openecomp.datatypes.network.SubnetAssignments
  properties:
    use_ipv4:
      type: boolean
      required: true
      description: Indicates IPv4 subnet assignments

org.openecomp.datatypes.network.IPv6SubnetAssignments:
  derived_from: org.openecomp.datatypes.network.SubnetAssignments
  properties:
    use_ipv6:
      type: boolean
      required: true
      description: Indicates IPv6 subnet assignments

org.openecomp.datatypes.network.NetworkAssignments:
  derived_from: org.openecomp.datatypes.Root
  properties:
    ecomp_generated_network_assignment:
      type: boolean
      required: true
      default: false
      description: >
        \"true\" indicates that the network assignments will be auto-generated by ECOMP
        \"false\" indicates operator-supplied Network assignments file upload is required (e.g. VID will present prompt to operator to upload operator-supplied Network assignments file).
    is_shared_network:
      type: boolean
      required: true
      description: \"true\" means this network is shared by multiple Openstack tenants
    is_external_network:
      type: boolean
      required: true
      default: false
      description: >
        \"true\" means this Contrail external network
    ipv4_subnet_default_assignment:
      type: org.openecomp.datatypes.network.IPv4SubnetAssignments
      required: true
      description: IPv4 defualt subnet assignments
    ipv6_subnet_default_assignment:
      type: org.openecomp.datatypes.network.IPv6SubnetAssignments
      required: true
      description: IPv6 defualt subnet assignments
    related_networks:
      type: list
      required: false
      description: Related Networks List.
      entry_schema:
        type: org.openecomp.datatypes.network.RelatedNetworksAssignments
    is_trunked:
      type: boolean
      required: true
      description: \"true\" indicates that network is trunked
      default: false

org.openecomp.datatypes.network.ProviderNetwork:
  derived_from: org.openecomp.datatypes.Root
  properties:
    is_provider_network:
      type: boolean
      required: true
      description: \"true\" indicates that this a Neutron provider type of network
    physical_network_name:
      type: string
      required: false
      constraints:
        - valid_values: ["Physnet41", "Physnet42", "Physnet43", "Physnet44", "Physnet21", "Physnet22", "sriovnet1", "sriovnet2", "oam"]
      description: >
        Identifies the NUMA processor cluster to which this physical network interface belongs.
        NUMA instance correlates to the first digit of the Physical Network Name suffix (e.g. \"01\" = NUMA 0, \"11\" = NUMA 1)
    numa:
      type: string
      required: false
      constraints:
        - valid_values: ["NUMA 0", "NUMA 1"]
      description: >
        PNIC instance within the NUMA processor cluster
        PNIC Instance correlates to the second digit of the Physical Network Name suffix (e.g. "01" = PNIC 1, "02" = "PNIC 2)
    pnic_instance:
      type: integer
      required: false
      description: PNIC instance within the NUMA processor cluster

org.openecomp.datatypes.network.NetworkFlows:
  derived_from: org.openecomp.datatypes.Root
  properties:
    is_network_policy:
      type: boolean
      required: false
      default: false
      description: \"true\" indicates the network has 1 or more policies
    network_policy:
      type: string
      required: false
      description: "Identifies the specific Cloud network policy that must be applied to this network (source: from Policy Manager)."
    is_bound_to_vpn:
      type: boolean
      required: false
      default: false
      description: \"true\" indicates the network has 1 or more vpn bindings
    vpn_binding:
      type: string
      required: false
      description: "Identifies the specific VPN Binding entry in A&AI that must be applied when creating this network (source: A&AI)"

org.openecomp.datatypes.network.VlanRequirements:
  derived_from: org.openecomp.datatypes.Root
  properties:
    vlan_range_plan:
      type: string
      required: true
      description: reference to a vlan range plan
    vlan_type:
      type: string
      required: true
      constraints:
        - valid_values: ["c-tag", "s-tag"]
      description: identifies the vlan type (e.g., c-tag)
    vlan_count:
      type: integer
      required: true
      description: identifies the number of vlan tags to assign to the CP from the plan

org.openecomp.datatypes.network.IpRequirements:
  derived_from: org.openecomp.datatypes.Root
  properties:
    ip_version:
      type: integer
      required: true
      constraints:
        - valid_values:
          - 4
          - 6
    ip_count:
      description: identifies the number of ip address to assign to the CP from the plan
      type: integer
      required: false
    floating_ip_count:
      type: integer
      required: false
    subnet_role:
      type: string
      required: false
    assingment_method:
      type: string
      required: true
      constraints:
        - valid_values:
          - fixed
          - dhcp
    dhcp_enabled:
      type: boolean
      required: false
    ip_count_required:
      description: identifies the number of ip address to assign to the CP from the plan
      type: org.openecomp.datatypes.AssignmentRequirements
      required: false
    floating_ip_count_required:
      type: org.openecomp.datatypes.AssignmentRequirements
      required: false
    ip_address_plan_name:
      type: string
      required: false
    vrf_name:
      type: string
      required: false

org.openecomp.datatypes.network.MacAssignments:
  derived_from: org.openecomp.datatypes.Root
  properties:
    mac_range_plan:
      type: string
      required: true
      description: reference to a MAC address range plan
    mac_count:
      type: integer
      required: true
      description: identifies the number of MAC addresses to assign to the CP from the plan

org.openecomp.datatypes.EcompHoming:
  derived_from: org.openecomp.datatypes.Root
  properties:
    ecomp_selected_instance_node_target:
      type: boolean
      required: true
      default: false
      description: >
        \"true\" indicates that the target deployment node for this instance will be auto-selected by ECOMP
        \"false\" indicates operator-supplied instance target deployment node required (e.g. VID will present a prompt to operator and collect the
        operator-selected target node for the deployment of this Network instance).
    homing_policy:
      type: string
      required: false
      description: Referenc to a service level homing policy that ECOMP will use for instance deployment target node
    instance_node_target:
      type: string
      required: false
      description: Instance target deployment node

org.openecomp.datatypes.EcompNaming:
  derived_from: org.openecomp.datatypes.Root
  properties:
    ecomp_generated_naming:
      type: boolean
      required: true
      default: true
      description: >
        \"true\" indicates that the name for the instance will be auto-generated by ECOMP.
        \"false\" indicates operator-supplied name required (e.g. VID will present prompt to operator and collect the operator-supplied instance name).
    naming_policy:
      type: string
      required: false
      description: Referenc to naming policy that ECOMP will use when the name is auto-generated

org.openecomp.datatypes.network.MacRequirements:
  derived_from: org.openecomp.datatypes.Root
  properties:
    mac_range_plan:
      description: reference to a MAC address range plan
      type: string
      required: false
    mac_count:
      description: identifies the number of MAC addresses to assign to the CP from the plan
      type: integer
      required: false
    mac_count_required:
      description: identifies the number of MAC addresses to assign to the CP from the plan
      type: org.openecomp.datatypes.AssignmentRequirements

org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.AddressPairIp:
  derived_from: tosca.datatypes.Root
  description: Virtual Machine Sub Interface Address Pair IP.
  properties:
    ip_prefix:
      type: string
      description: IP Prefix.
      required: false
      status: supported
    ip_prefix_len:
      type: integer
      description: IP Prefix Len.
      required: false
      status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.MacAddress:
  derived_from: tosca.datatypes.Root
  description: Virtual Machine Sub Interface Mac Address.
  properties:
    mac_address:
      type: list
      description: Mac Addresses List.
      required: false
      status: supported
      entry_schema:
        type: string

org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.Properties:
  derived_from: tosca.datatypes.Root
  description: Virtual Machine Sub Interface VLAN Properties.
  properties:
    sub_interface_vlan_tag:
      type: string
      description: Sub Interface VLAN Tag.
      required: false
      status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.AddressPair:
  derived_from: tosca.datatypes.Root
  description: Virtual Machine Sub Interface Address Pair.
  properties:
    address_mode:
      type: string
      description: Address Mode.
      required: false
      status: supported
    ip:
      type: org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.AddressPairIp
      description: IP.
      required: false
      status: supported
    mac:
      type: string
      description: Mac.
      required: false
      status: supported

org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.AddressPairs:
  derived_from: tosca.datatypes.Root
  description: Virtual Machine Sub Interface Address Pairs.
  properties:
    allowed_address_pair:
      type: list
      description: Addresses pair List.
      required: false
      status: supported
      entry_schema:
        type: org.openecomp.datatypes.heat.contrailV2.virtual.machine.subInterface.AddressPair

org.openecomp.datatypes.Naming:
  derived_from: org.openecomp.datatypes.Root
  properties:
      ecomp_generated_naming:
        description: |
          "true" indicates that the name for the instance will be auto-generated by ECOMP. "false" indicates operator-supplied name required (e.g. VID will present prompt to operator and collect the operator-supplied instance name).
        type: boolean
        default: true
        required: true
      naming_policy:
        description: Reference to naming policy that ECOMP will use when the name is auto-generated
        type: string
        required: false
      instance_name:
        description: indicates operator-supplied name required (e.g. VID will present prompt to operator and collect the operator-supplied instance name).
        type: string
        required: false

# NFoD
org.openecomp.datatypes.flavors.ComputeFlavor:
  derived_from: tosca.datatypes.Root
  properties:
      num_cpus:
        type: integer
      disk_size:
        type: scalar-unit.size
      mem_size:
        type: scalar-unit.size

org.openecomp.datatypes.flavors.LicenseFlavor:
  derived_from: tosca.datatypes.Root
  properties:
      feature_group_uuid:
        type: string

org.openecomp.datatypes.flavors.VendorInfo:
  derived_from: tosca.datatypes.Root
  properties:
      manufacturer_reference_number:
        type: string
      vendor_model:
        type: string

org.openecomp.datatypes.flavors.DeploymentFlavor:
  derived_from: tosca.datatypes.Root
  properties:
      sp_part_number:
        type: string
      vendor_info:
        type: org.openecomp.datatypes.flavors.VendorInfo
      compute_flavor:
        type: org.openecomp.datatypes.flavors.ComputeFlavor
      license_flavor:
        type: org.openecomp.datatypes.flavors.LicenseFlavor
        required: false

org.openecomp.datatypes.ImageInfo:
  derived_from: tosca.datatypes.Root
  properties:
      software_version:
        type: string
      file_name:
        type: string
      file_hash:
        type: string
        description: checksum/signature
      file_hash_type:
        type: string
        required: false
        default: md5

org.openecomp.datatypes.network.RelatedNetworksAssignments:
  derived_from: org.openecomp.datatypes.Root
  properties:
      related_network_role:
        type: string
        description: The network role of the related network, sharing provider network.
        required: false

#ONAP types
tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties:
  derived_from: tosca.datatypes.Root
  description: VnfcAdditionalConfigurableProperties type is an empty base type for deriving data types for describing additional configurable properties for a given VNFC.
  # below description properties added as optional, since atleast one property required to define a dataType in SDC
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfcConfigurableProperties:
  derived_from: tosca.datatypes.Root
  description: Defines the configurable properties of a VNFC
  properties:
    additional_vnfc_configurable_properties:
      type: tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties
      description: Describes additional configuration for VNFC that can be modified using the ModifyVnfInfo operation
      required: false
    # derived types are expected to introduce
    # additional_vnfc_configurable_properties with its type derived from
    # tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties
tosca.datatypes.nfv.RequestedAdditionalCapability:
  derived_from: tosca.datatypes.Root
  description: describes requested additional capability for a particular VDU
  properties:
    requested_additional_capability_name:
      type: string
      description: Identifies a requested additional capability for the VDU.
      required: true
    support_mandatory:
      type: boolean
      description: Indicates whether the requested additional capability is mandatory for successful operation.
      required: true
    min_requested_additional_capability_version:
      type: string
      description: Identifies the minimum version of the requested additional capability.
      required: false
    preferred_requested_additional_capability_version:
      type: string
      description: Identifies the preferred version of the requested additional capability.
      required: false
    target_performance_parameters:
      type: map
      description: Identifies specific attributes, dependent on the requested additional capability type.
      required: true
      entry_schema:
        type: string
tosca.datatypes.nfv.VirtualMemory:
  derived_from: tosca.datatypes.Root
  description: supports the specification of requirements related to virtual memory of a virtual compute resource
  properties:
    virtual_mem_size:
      type: scalar-unit.size
      description: Amount of virtual memory.
      required: true
    virtual_mem_oversubscription_policy:
      type: string
      description: The memory core oversubscription policy in terms of virtual memory to physical memory on the platform.
      required: false
    vdu_mem_requirements:
      type: map
      description: The hardware platform specific VDU memory requirements. A map of strings that contains a set of key-value pairs that describes hardware platform specific VDU memory requirements.
      required: false
      entry_schema:
        type: string
    numa_enabled:
      type: boolean
      description: It specifies the memory allocation to be cognisant of the relevant process/core allocation.
      required: false
      default: false
tosca.datatypes.nfv.VirtualCpuPinning:
  derived_from: tosca.datatypes.Root
  description: Supports the specification of requirements related to the virtual CPU pinning configuration of a virtual compute resource
  properties:
    virtual_cpu_pinning_policy:
      type: string
      description: 'Indicates the policy for CPU pinning. The policy can take values of "static" or "dynamic". In case of "dynamic" the allocation of virtual CPU cores to logical CPU cores is decided by the VIM. (e.g.: SMT (Simultaneous Multi-Threading) requirements). In case of "static" the allocation is requested to be according to the virtual_cpu_pinning_rule.'
      required: false
      constraints:
        - valid_values: [ static, dynamic ]
    virtual_cpu_pinning_rule:
      type: list
      description: Provides the list of rules for allocating virtual CPU cores to logical CPU cores/threads
      required: false
      entry_schema:
        type: string
tosca.datatypes.nfv.VirtualCpu:
  derived_from: tosca.datatypes.Root
  description: Supports the specification of requirements related to virtual CPU(s) of a virtual compute resource
  properties:
    cpu_architecture:
      type: string
      description: CPU architecture type. Examples are x86, ARM
      required: false
    num_virtual_cpu:
      type: integer
      description: Number of virtual CPUs
      required: true
      constraints:
        - greater_than: 0
    virtual_cpu_clock:
      type: scalar-unit.frequency
      description: Minimum virtual CPU clock rate
      required: false
    virtual_cpu_oversubscription_policy:
      type: string
      description: CPU core oversubscription policy e.g. the relation of virtual CPU cores to physical CPU cores/threads.
      required: false
    vdu_cpu_requirements:
      type: map
      description: The hardware platform specific VDU CPU requirements. A map of strings that contains a set of key-value pairs describing VDU CPU specific hardware platform requirements.
      required: false
      entry_schema:
        type: string
    virtual_cpu_pinning:
      type: tosca.datatypes.nfv.VirtualCpuPinning
      description: The virtual CPU pinning configuration for the virtualised compute resource.
      required: false
tosca.datatypes.nfv.LogicalNodeData:
  derived_from: tosca.datatypes.Root
  description: Describes compute, memory and I/O requirements associated with a particular VDU.
  properties:
    logical_node_requirements:
      type: map
      description: The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node.
      required: false
      entry_schema:
        type: string
tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements:
  derived_from: tosca.datatypes.Root
  description: Describes requirements on a virtual network interface
  properties:
    name:
      type: string
      description: Provides a human readable name for the requirement.
      required: false
    description:
      type: string
      description: Provides a human readable description of the requirement.
      required: false
    support_mandatory:
      type: boolean
      description: Indicates whether fulfilling the constraint is mandatory (TRUE) for successful operation or desirable (FALSE).
      required: true
    network_interface_requirements:
      type: map
      description: The network interface requirements. A map of strings that contain a set of key-value pairs that describes the hardware platform specific  network interface deployment requirements.
      required: true
      entry_schema:
        type: string
    nic_io_requirements:
      type: tosca.datatypes.nfv.LogicalNodeData
      description: references (couples) the CP with any logical node I/O requirements (for network devices) that may have been created. Linking these attributes is necessary so that so that I/O requirements that need to be articulated at the logical node level can be associated with the network interface requirements associated with the CP.
      required: false

tosca.datatypes.nfv.injectFile: #used for vCPE usecase
  derived_from: tosca.datatypes.Root
  properties:
    source_path:
      type: string
      required: true
    dest_path:
      type: string
      required: true
tosca.datatypes.nfv.L2AddressData:
  derived_from: tosca.datatypes.Root
  description: Describes the information on the MAC addresses to be assigned to a connection point.
  properties:
    mac_address_assignment:
      type: boolean
      description: Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility
      required: true
tosca.datatypes.nfv.L3AddressData:
  derived_from: tosca.datatypes.Root
  description: Provides information about Layer 3 level addressing scheme and parameters applicable to a CP
  properties:
    ip_address_assignment:
      type: boolean
      description: Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility
      required: true
    floating_ip_activated:
      type: boolean
      description: Specifies if the floating IP scheme is activated on the Connection Point or not
      required: true
    ip_address_type:
      type: string
      description: Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the parent VnfExtCp
      required: false
      constraints:
        - valid_values: [ ipv4, ipv6 ]
    number_of_ip_address:
      type: integer
      description: Minimum number of IP addresses to be assigned
      required: false
      constraints:
        - greater_than: 0
    fixed_ip_address: #Introduced from Beijing release, only used for vCPE usecase
      type: list
      entry_schema:
        type: string
      required: false
tosca.datatypes.nfv.AddressData:
  derived_from: tosca.datatypes.Root
  description: Describes information about the addressing scheme and parameters applicable to a CP
  properties:
    address_type:
      type: string
      description: Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point
      required: true
      constraints:
        - valid_values: [ mac_address, ip_address ]
    l2_address_data:
      type: tosca.datatypes.nfv.L2AddressData
      description: Provides the information on the MAC addresses to be assigned to a connection point.
      required: false
    l3_address_data:
      type: tosca.datatypes.nfv.L3AddressData
      description: Provides the information on the IP addresses to be assigned to a connection point
      required: false
tosca.datatypes.nfv.ConnectivityType:
  derived_from: tosca.datatypes.Root
  description: describes additional connectivity information of a virtualLink
  properties:
    layer_protocols:
      type: list
      description: Identifies the protocol a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire).The top layer protocol of the virtualLink protocol stack shall always be provided. The lower layer protocols may be included when there are specific requirements on these layers.
      required: true
      entry_schema:
        type: string
        constraints:
          - valid_values: [ ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire ]
    flow_pattern:
      type: string
      description: Identifies the flow pattern of the connectivity
      required: false
      constraints:
        - valid_values: [ line, tree, mesh ]
tosca.datatypes.nfv.VlFlavour:
  derived_from: tosca.datatypes.Root
  properties:
    flavourId:
      type: string
tosca.datatypes.nfv.ext.AddressPairs:
  properties:
    ip:
      type: string
      required: false
    mac:
      type: string
      required: false
tosca.datatypes.nfv.ext.FloatingIP:
  properties:
    external_network:
      type: string
      required: false
    ip_address:
      type: string
      required: false
tosca.datatypes.nfv.ext.LocationInfo:
  properties:
    availability_zone:
      type: string
      required: false
    vimid:
      type: integer
      required: false
    tenant:
      type: string
      required: false
tosca.datatypes.nfv.ext.HostRouteInfo:
  properties:
    destination:
      type: string
      required: false
    nexthop:
      type: string
      required: false
tosca.datatypes.nfv.ext.InjectData:
  properties:
    file_name:
      type: string
      required: false
    file_data:
      type: string
      required: false
tosca.datatypes.nfv.ext.zte.WatchDog:
  properties:
    enable_delay:
      type: integer
      required: false
    action:
      type: string
      required: false
tosca.datatypes.nfv.ext.LocalAffinityOrAntiAffinityRule:
  properties:
    scope:
      type: string
      required: false
    affinity_antiaffinity:
      type: string
      required: false
tosca.datatypes.nfv.VduProfile:
  derived_from: tosca.datatypes.Root
  description: describes additional instantiation data for a given Vdu.Compute used in a specific deployment flavour.
  properties:
    min_number_of_instances:
      type: integer
      description: Minimum number of instances of the VNFC based on this Vdu.Compute that is permitted to exist for a particular VNF deployment flavour.
      required: true
      constraints:
        - greater_or_equal: 0
    max_number_of_instances:
      type: integer
      description: Maximum number of instances of the VNFC based on this Vdu.Compute that is permitted to exist for a particular VNF deployment flavour.
      required: true
      constraints:
        - greater_or_equal: 0
    watchdog: #Introduced from Beijing release, only used for vCPE usecase, outside the scope of SOL001 v2.5.1
      type: string
      required: true
    vmBootUpTimeOut: #Introduced from Beijing release, only used for vCPE usecase, outside the scope of SOL001 v2.5.1
      type: integer
      required: false
tosca.datatypes.nfv.LinkBitrateRequirements:
  derived_from: tosca.datatypes.Root
  description: describes the requirements in terms of bitrate for a virtual link
  properties:
    root:
      type: integer # in bits per second
      description: Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN).
      required: true
      constraints:
        - greater_or_equal: 0
    leaf:
      type: integer # in bits per second
      description: Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches).
      required: false
      constraints:
        - greater_or_equal: 0
tosca.datatypes.nfv.Qos:
  derived_from: tosca.datatypes.Root
  description: describes QoS data for a given VL used in a VNF deployment flavour
  properties:
    latency:
      type: scalar-unit.time #Number [ms]
      description: Specifies the maximum latency
      required: true
      constraints:
        - greater_than: 0 s
    packet_delay_variation:
      type: scalar-unit.time #Number [ms]
      description: Specifies the maximum jitter
      required: true
      constraints:
        - greater_or_equal: 0 s
    packet_loss_ratio:
      type: float #Number [0 ..1]
      description: Specifies the maximum packet loss ratio
      required: false
      constraints:
        - in_range: [ 0.0, 1.0 ]

tosca.datatypes.nfv.IpAllocationPool:
  derived_from: tosca.datatypes.Root
  description: Specifies a range of IP addresses
  properties:
    start_ip_address:
      type: string
      description: The IP address to be used as the first one in a pool of addresses derived from the cidr block full IP range
      required: true
    end_ip_address:
      type: string
      description: The IP address to be used as the last one in a pool of addresses derived from the cidr block full IP range
      required: true
tosca.datatypes.nfv.L2ProtocolData:
  derived_from: tosca.datatypes.Root
  description: describes L2 protocol data for a given virtual link used in a specific VNF deployment flavour.
  properties:
    name:
      type: string
      description: Identifies the network name associated with this L2 protocol.
      required: false
    network_type:
      type: string
      description: Specifies the network type for this L2 protocol.The value may be overridden at run-time.
      required: false
      constraints:
        - valid_values: [ flat, vlan, vxlan, gre ]
    vlan_transparent:
      type: boolean
      description: Specifies whether to support VLAN transparency for this L2 protocol or not.
      required: false
      default: false
    mtu:
      type: integer
      description: Specifies the maximum transmission unit (MTU) value for this L2 protocol.
      required: false
      constraints:
        - greater_than: 0
    segmentation_id:  #Introduced from Beijing release, only used for vCPE usecase, outside the scope of SOL001 v2.5.1
      type: integer
      required: false
    physical_network:  #Introduced from Beijing release, only used for vCPE usecase, outside the scope of SOL001 v2.5.1
      type: string
      required: false
tosca.datatypes.nfv.L3ProtocolData:
  derived_from: tosca.datatypes.Root
  description: describes L3 protocol data for a given virtual link used in a specific VNF deployment flavour.
  properties:
    name:
      type: string
      description: Identifies the network name associated with this L3 protocol.
      required: false
    ip_version:
      type: string
      description: Specifies IP version of this L3 protocol.The value of the ip_version property shall be consistent with the value of the layer_protocol in the connectivity_type property of the virtual link node.
      required: true
      constraints:
        - valid_values: [ ipv4, ipv6 ]
    cidr:
      type: string
      description: Specifies the CIDR (Classless Inter-Domain Routing) of this L3 protocol. The value may be overridden at run-time.
      required: true
    ip_allocation_pools:
      type: list
      description: Specifies the allocation pools with start and end IP addresses for this L3 protocol. The value may be overridden at run-time.
      required: false
      entry_schema:
        type: tosca.datatypes.nfv.IpAllocationPool
    gateway_ip:
      type: string
      description: Specifies the gateway IP address for this L3 protocol. The value may be overridden at run-time.
      required: false
    dhcp_enabled:
      type: boolean
      description: Indicates whether DHCP (Dynamic Host Configuration Protocol) is enabled or disabled for this L3 protocol. The value may be overridden at run-time.
      required: false
    ipv6_address_mode:
      type: string
      description: Specifies IPv6 address mode. May be present when the value of the ipVersion attribute is "ipv6" and shall be absent otherwise. The value may be overridden at run-time.
      required: false
      constraints:
        - valid_values: [ slaac, dhcpv6-stateful, dhcpv6-stateless ]
tosca.datatypes.nfv.VirtualLinkProtocolData:
  derived_from: tosca.datatypes.Root
  description: describes one protocol layer and associated protocol data for a given virtual link used in a specific VNF deployment flavour
  properties:
    associated_layer_protocol:
       type: string
       description: Identifies one of the protocols a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire) as specified by the connectivity_type property.
       required: true
       constraints:
         - valid_values: [ ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire ]
    l2_protocol_data:
       type: tosca.datatypes.nfv.L2ProtocolData
       description: Specifies the L2 protocol data for a virtual link. Shall be present when the associatedLayerProtocol attribute indicates a L2 protocol and shall be absent otherwise.
       required: false
    l3_protocol_data:
       type: tosca.datatypes.nfv.L3ProtocolData
       description: Specifies the L3 protocol data for this virtual link.  Shall be present when the associatedLayerProtocol attribute indicates a L3 protocol and shall be absent otherwise.
       required: false

tosca.datatypes.nfv.VlProfile:
  derived_from: tosca.datatypes.Root
  description: Describes additional instantiation data for a given VL used in a specific VNF deployment flavour.
  properties:
    max_bitrate_requirements:
      type: tosca.datatypes.nfv.LinkBitrateRequirements
      description: Specifies the maximum bitrate requirements for a VL instantiated according to this profile.
      required: true
    min_bitrate_requirements:
      type: tosca.datatypes.nfv.LinkBitrateRequirements
      description: Specifies the minimum bitrate requirements for a VL instantiated according to this profile.
      required: true
    qos:
      type: tosca.datatypes.nfv.Qos
      description: Specifies the QoS requirements of a VL instantiated according to this profile.
      required: false
    virtual_link_protocol_data:
      type: list
      description: Specifies the protocol data for a virtual link.
      required: false
      entry_schema:
        type: tosca.datatypes.nfv.VirtualLinkProtocolData
tosca.datatypes.nfv.VduLevel:
  derived_from: tosca.datatypes.Root
  description: Indicates for a given Vdu.Compute in a given level the number of instances to deploy
  properties:
    number_of_instances:
      type: integer
      description: Number of instances of VNFC based on this VDU to deploy for this level.
      required: true
      constraints:
        - greater_or_equal: 0
tosca.datatypes.nfv.ScaleInfo:
  derived_from: tosca.datatypes.Root
  description: Indicates for a given scaleAspect the corresponding scaleLevel
  properties:
    scale_level:
      type: integer
      description: The scale level for a particular aspect
      required: true
      constraints:
        - greater_or_equal: 0
tosca.datatypes.nfv.ScalingAspect:
  derived_from: tosca.datatypes.Root
  properties:
    name:
      type: string
      required: true
    description:
      type: string
      required: true
    max_scale_level:
      type: integer # positiveInteger
      required: true
      constraints:
        - greater_or_equal: 0
    step_deltas:
      type: list
      required: false
      entry_schema:
        type: string # Identifier
tosca.datatypes.nfv.InstantiationLevel:
  derived_from: tosca.datatypes.Root
  description: Describes the scale level for each aspect that corresponds to a given level of resources to be instantiated within a deployment flavour in term of the number VNFC instances
  properties:
    description:
      type: string
      description: Human readable description of the level
      required: true
    scale_info:
      type: map # key: aspectId
      description: Represents for each aspect the scale level that corresponds to this instantiation level. scale_info shall be present if the VNF supports scaling.
      required: false
      entry_schema:
        type: tosca.datatypes.nfv.ScaleInfo

tosca.datatypes.nfv.VnfInstantiateOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the InstantiateVnf operation.
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfScaleOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: Represents information that affect the invocation of the ScaleVnf operation
  properties:
    scaling_by_more_than_one_step_supported:
      type: boolean
      description: Signals whether passing a value larger than one in the numScalingSteps parameter of the ScaleVnf operation is supported by this VNF.
      required: false
      default: false
tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the ScaleVnfToLevel operation
  properties:
    arbitrary_target_levels_supported:
      type: boolean
      description: Signals whether scaling according to the parameter "scaleInfo" is supported by this VNF
      required: true
tosca.datatypes.nfv.VnfHealOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the HealVnf operation
  properties:
    causes:
      type: list
      description: Supported "cause" parameter values
      required: false
      entry_schema:
        type: string
tosca.datatypes.nfv.VnfTerminateOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the TerminateVnf
  properties:
    min_graceful_termination_timeout:
      type: scalar-unit.time # For TOSCA V1.2 use type as scalar-unit.time  instead of integer
      description: Minimum timeout value for graceful termination of a VNF instance
      required: true
    max_recommended_graceful_termination_timeout:
      type: scalar-unit.time # For TOSCA V1.2 use type as scalar-unit.time  instead of integer
      description: Maximum recommended timeout value that can be needed to gracefully terminate a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint
      required: false
tosca.datatypes.nfv.VnfOperateOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the OperateVnf operation
  properties:
    min_graceful_stop_timeout:
      type: scalar-unit.time
      description: Minimum timeout value for graceful stop of a VNF instance
      required: true
    max_recommended_graceful_stop_timeout:
      type: scalar-unit.time
      description: Maximum recommended timeout value that can be needed to gracefully stop a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint
      required: false
tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the ChangeVnfFlavour operation
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfProfile:
  derived_from: tosca.datatypes.Root
  description: describes a profile for instantiating VNFs of a particular NS DF according to a specific VNFD and VNF DF.
  properties:
    instantiation_level:
      type: string
      description: Identifier of the instantiation level of the VNF DF to be used for instantiation. If not present, the default instantiation level as declared in the VNFD shall be used.
      required: false
    min_number_of_instances:
      type: integer
      description: Minimum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile.
      required: true
      constraints:
        - greater_or_equal: 0
    max_number_of_instances:
      type: integer
      description: Maximum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile.
      required: true
      constraints:
        - greater_or_equal: 0
tosca.datatypes.nfv.UriAuthority:
  derived_from: tosca.datatypes.Root
  description: information that corresponds to the authority component of a URI as specified in IETF RFC 3986 [8]
  properties:
    user_info:
      type: string # shall comply with IETF RFC 3986
      description: user_info field of the authority component of a URI
      required: false
    host:
      type: string # shall comply with IETF RFC 3986
      description: host field of the authority component of a URI
      required: false
    port:
      type: string # shall comply with IETF RFC 3986
      description: port field of the authority component of a URI
      required: false
tosca.datatypes.nfv.UriComponents:
  derived_from: tosca.datatypes.Root
  description: information used to build a URI that complies with IETF RFC 3986 [8].
  properties:
    scheme:
      type: string # shall comply with IETF RFC3986
      description: scheme component of a URI.
      required: true
    authority:
      type: tosca.datatypes.nfv.UriAuthority
      description: Authority component of a URI
      required: false
    path:
      type: string # shall comply with IETF RFC 3986
      description: path component of a URI.
      required: false
    query:
      type: string # shall comply with IETF RFC 3986
      description: query component of a URI.
      required: false
    fragment:
      type: string # shall comply with IETF RFC 3986
      description: fragment component of a URI.
      required: false
tosca.datatypes.nfv.InterfaceDetails:
  derived_from: tosca.datatypes.Root
  description: information used to access an interface exposed by a VNF
  properties:
    uri_components:
      type: tosca.datatypes.nfv.UriComponents
      description: Provides components to build a Uniform Ressource Identifier (URI) where to access the interface end point.
      required: false
    interface_specific_data:
      type: map
      description: Provides additional details that are specific to the type of interface considered.
      required: false
      entry_schema:
        type: string
tosca.datatypes.nfv.VirtualLinkMonitoringParameter:
  derived_from: tosca.datatypes.Root
  description: Represents information on virtualised resource related performance metrics applicable to the VNF.
  properties:
    name:
      type: string
      description: Human readable name of the monitoring parameter
      required: true
    performance_metric:
      type: string
      description: Identifies a performance metric derived from those defined in ETSI GS NFV-IFA 027.The packetOutgoingVirtualLink and packetIncomingVirtualLink metrics shall be obtained by aggregation the PacketOutgoing and PacketIncoming measurements defined in clause 7.1 of GS NFV-IFA 027 of all virtual link ports attached to the virtual link to which the metrics apply.
      required: true
      constraints:
         - valid_values: [ packet_outgoing_virtual_link, packet_incoming_virtual_link ]
    collection_period:
      type: scalar-unit.time
      description: Describes the recommended periodicity at which to collect the performance information.
      required: false
      constraints:
        - greater_than: 0 s
tosca.datatypes.nfv.VnfcMonitoringParameter:
  derived_from: tosca.datatypes.Root
  description: Represents information on virtualised resource related performance metrics applicable to the VNF.
  properties:
    name:
      type: string
      description: Human readable name of the monitoring parameter
      required: true
    performance_metric:
      type: string
      description: Identifies the performance metric, according to ETSI GS NFV-IFA 027.
      required: true
      constraints:
        - valid_values: [ v_cpu_usage_mean_vnf, v_cpu_usage_peak_vnf, v_memory_usage_mean_vnf, v_memory_usage_peak_vnf, v_disk_usage_mean_vnf, v_disk_usage_peak_vnf, byte_incoming_vnf_int_cp, byte_outgoing_vnf_int_cp, packet_incoming_vnf_int_cp, packet_outgoing_vnf_int_cp ]
    collection_period:
      type: scalar-unit.time
      description: Describes the recommended periodicity at which to collect the performance information.
      required: false
      constraints:
        - greater_than: 0 s
tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration:
  derived_from: tosca.datatypes.Root
  description: represents information that affect the invocation of the ChangeExtVnfConnectivity operation
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfMonitoringParameter:
  derived_from: tosca.datatypes.Root
  description: Represents information on virtualised resource related performance metrics applicable to the VNF.
  properties:
    name:
      type: string
      description: Human readable name of the monitoring parameter
      required: true
    performance_metric:
      type: string
      description: Identifies the performance metric, according to ETSI GS NFV-IFA 027.
      required: true
      constraints:
        - valid_values: [ v_cpu_usage_mean_vnf, v_cpu_usage_peak_vnf, v_memory_usage_mean_vnf, v_memory_usage_peak_vnf, v_disk_usage_mean_vnf, v_disk_usage_peak_vnf, byte_incoming_vnf_ext_cp, byte_outgoing_vnf_ext_cp, packet_incoming_vnf_ext_cp, packet_outgoing_vnf_ext_cp ]
    collection_period:
      type: scalar-unit.time
      description: Describes the recommended periodicity at which to collect the performance information.
      required: false
      constraints:
        - greater_than: 0 s
tosca.datatypes.nfv.VnfLcmOperationsConfiguration:
  derived_from: tosca.datatypes.Root
  description: Represents information to configure lifecycle management operations
  properties:
    instantiate:
      type: tosca.datatypes.nfv.VnfInstantiateOperationConfiguration
      description: Configuration parameters for the InstantiateVnf operation
      required: false
    scale:
      type: tosca.datatypes.nfv.VnfScaleOperationConfiguration
      description: Configuration parameters for the ScaleVnf operation
      required: false
    scale_to_level:
      type: tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration
      description: Configuration parameters for the ScaleVnfToLevel operation
      required: false
    change_flavour:
      type: tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration
      description: Configuration parameters for the changeVnfFlavourOpConfig operation
      required: false
    heal:
      type: tosca.datatypes.nfv.VnfHealOperationConfiguration
      description: Configuration parameters for the HealVnf operation
      required: false
    terminate:
      type: tosca.datatypes.nfv.VnfTerminateOperationConfiguration
      description: Configuration parameters for the TerminateVnf operation
      required: false
    operate:
      type: tosca.datatypes.nfv.VnfOperateOperationConfiguration
      description: Configuration parameters for the OperateVnf operation
      required: false
    change_ext_connectivity:
      type:   tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration
      description: Configuration parameters for the changeExtVnfConnectivityOpConfig operation
      required: false
tosca.datatypes.nfv.CpProtocolData:
  derived_from: tosca.datatypes.Root
  description: Describes and associates the protocol layer that a CP uses together with other protocol and connection point information
  properties:
    associated_layer_protocol:
      type: string
      required: true
      description: One of the values of the property layer_protocols of the CP
      constraints:
        - valid_values: [ ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire ]
    address_data:
      type: list
      description: Provides information on the addresses to be assigned to the CP
      entry_schema:
        type: tosca.datatypes.nfv.AddressData
      required: false
tosca.datatypes.nfv.VnfAdditionalConfigurableProperties:
  derived_from: tosca.datatypes.Root
  description: is an empty base type for deriving data types for describing additional configurable properties for a given VNF
  # below description properties added as optional, since atleast one property required to define a dataType in SDC
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfConfigurableProperties:
  derived_from: tosca.datatypes.Root
  description: indicates configuration properties for a given VNF (e.g. related to auto scaling and auto healing).
  properties:
    is_autoscale_enabled:
      type: boolean
      description: It permits to enable (TRUE)/disable (FALSE) the auto-scaling functionality. If the properties is not present for configuring, then VNF property is not supported
      required: false
    is_autoheal_enabled:
      type: boolean
      description: It permits to enable (TRUE)/disable (FALSE) the auto-healing functionality. If the properties is not present for configuring, then VNF property is not supported
      required: false
    additional_configurable_properties:
      description: It provides VNF specific configurable properties that can be modified using the ModifyVnfInfo operation
      required: false
      type: tosca.datatypes.nfv.VnfAdditionalConfigurableProperties
    # derived types are expected to introduce
    # additional_configurable_properties with its type derived from
    # tosca.datatypes.nfv.VnfAdditionalConfigurableProperties
tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions:
  derived_from: tosca.datatypes.Root
  description: is an empty base type for deriving data types for describing VNF-specific extension
  # below description properties added as optional, since atleast one property required to define a dataType in SDC
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfInfoModifiableAttributesMetadata:
  derived_from: tosca.datatypes.Root
  description: is an empty base type for deriving data types for describing VNF-specific metadata
  # below description properties added as optional, since atleast one property required to define a dataType in SDC
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VnfInfoModifiableAttributes:
  derived_from: tosca.datatypes.Root
  description: Describes VNF-specific extension and metadata for a given VNF
  properties:
    extensions:
      type: tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions
      description: \"Extension\" properties of VnfInfo that are writeable
      required: false
      # derived types are expected to introduce
      # extensions with its type derived from
      # tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions
    metadata:
      type: tosca.datatypes.nfv.VnfInfoModifiableAttributesMetadata
      description: \"Metadata\" properties of VnfInfo that are writeable
      required: false
      # derived types are expected to introduce
      # metadata with its type derived from
      # tosca.datatypes.nfv.VnfInfoModifiableAttributesMetadata

tosca.datatypes.nfv.VirtualLinkBitrateLevel:
  derived_from: tosca.datatypes.Root
  description: Describes bitrate requirements applicable to the virtual link instantiated from a particicular VnfVirtualLink
  properties:
    description:
      type: string
      required: false
    bitrate_requirements:
      type: tosca.datatypes.nfv.LinkBitrateRequirements
      description: Virtual link bitrate requirements for an instantiation level or bitrate delta for a scaling step
      required: true

tosca.datatypes.nfv.VnfOperationAdditionalParameters:
  derived_from: tosca.datatypes.Root
  description: Is an empty base type for deriving data type for describing VNF-specific parameters to be passed when invoking lifecycle management operations
  # below description properties added as optional, since atleast one property required to define a dataType in SDC
  properties:
    description:
      type: string
      required: false
tosca.datatypes.nfv.VirtualFileStorageData:
  derived_from: tosca.datatypes.Root
  description: VirtualFileStorageData describes file storage requirements associated with compute resources in a particular VDU
  properties:
    size_of_storage:
      type: scalar-unit.size
      description: Size of virtualized storage resource
      required: true
    file_system_protocol:
      type: string
      description: The shared file system protocol (e.g. NFS, CIFS)
      required: true
tosca.datatypes.nfv.VirtualObjectStorageData:
  derived_from: tosca.datatypes.Root
  description: VirtualObjectStorageData describes object storage requirements associated with compute resources in a particular VDU
  properties:
    max_size_of_storage:
      type: scalar-unit.size
      description: Maximum size of virtualized storage resource
      required: false
tosca.datatypes.nfv.VirtualBlockStorageData:
  derived_from: tosca.datatypes.Root
  description: VirtualBlockStorageData describes block storage requirements associated with compute resources in a particular VDU, either as a local disk or as virtual attached storage
  properties:
    size_of_storage:
      type: scalar-unit.size
      description: Size of virtualised storage resource
      required: true
    vdu_storage_requirements:
      type: map
      description: The hardware platform specific storage requirements. A map of strings that contains a set of key-value pairs that represents the hardware platform specific storage deployment requirements.
      required: false
      entry_schema:
        type: string
    rdma_enabled:
      type: boolean
      description: Indicates if the storage support RDMA
      required: false
      default: false
tosca.datatypes.nfv.SwImageData:
  derived_from: tosca.datatypes.Root
  description: describes information  related to a software image artifact
  properties: # in SOL001 v0.8.0: "properties or metadata:"
    name:
      type: string
      description: Name of this software image
      required: true
    version:
      type: string
      description: Version of this software image
      required: true
    checksum:
      type: string
      description:  Checksum of the software image file
      required: true
    container_format:
      type: string
      description: The container format describes the container file format in which software image is provided
      required: true
      constraints:
        - valid_values: [ aki, ami, ari, bare, docker, ova, ovf ]
    disk_format:
      type: string
      description: The disk format of a software image is the format of the underlying disk image
      required: true
      constraints:
        - valid_values: [ aki, ami, ari, iso, qcow2, raw, vdi, vhd, vhdx, vmdk ]
    min_disk:
      type: scalar-unit.size # Number
      description:  The minimal disk size requirement for this software image
      required: true
    min_ram:
      type: scalar-unit.size # Number
      description: The minimal RAM requirement for this software image
      required: false
    size:
      type: scalar-unit.size # Number
      description: The size of this software image
      required: true
    operating_system:
      type: string
      description: Identifies the operating system used in the software image
      required: false
    supported_virtualisation_environments:
      type: list
      description: Identifies the virtualisation environments (e.g. hypervisor) compatible with this software image
      required: false
      entry_schema:
        type: string

### Data types used by Policy PM Mapper for closed loop ###

onap.datatypes.monitoring.pm-mapper-filter:
  derived_from: tosca.datatypes.Root
  properties:
    filters:
      type: list
      description: Filter configuration
      default: []
      required: true
      entry_schema:
        type: onap.datatypes.monitoring.filters

onap.datatypes.monitoring.filters:
  derived_from: tosca.datatypes.Root
  properties:
    pmDefVsn:
      type: string
      description: PM Dictionary version
      required: true
    nfType:
      type: string
      description: NF type
      required: true
    vendor:
      type: string
      description: Vendor name
      required: true
    measTypes:
      type: list
      description: Measurement types to collect
      default: []
      required: true
      entry_schema:
        type: string

### Data types used by Policy PM Subscription Handler for closed loop ###

onap.datatypes.monitoring.subscription:
  derived_from: tosca.datatypes.Root
  properties:
    subscriptionName:
      type: string
      description: Name of the subscription
      required: true
    administrativeState:
      type: string
      description: State of the subscription
      required: true
      constraints:
        - valid_values:
            - LOCKED
            - UNLOCKED
    fileBasedGP:
      type: integer
      description: File based granularity period
      required: true
    fileLocation:
      type: string
      description: ROP file location
      required: true
    nfTypeModelInvariantId:
      type: string
      description: Network function invariant ID
      required: true
    nfFilter:
      type: map
      description: Network function filter
      required: true
      entry_schema:
        type: onap.datatypes.monitoring.nfFilter
    measurementGroups:
      type: list
      description: Measurement Groups
      required: true
      entry_schema:
        type: onap.datatypes.monitoring.measurementGroups

onap.datatypes.monitoring.nfFilter:
  derived_from: tosca.datatypes.Root
  properties:
    nfNames:
      type: list
      description: List of network functions
      required: true
      default: []
      entry_schema:
        type: string
    swVersions:
      type: list
      description: List of software versions
      required: true
      default: []
      entry_schema:
        type: string

onap.datatypes.monitoring.measurementGroups:
  derived_from: tosca.datatypes.Root
  properties:
    measurementGroup:
      type: map
      description: Measurement Group
      required: true
      entry_schema:
        type: onap.datatypes.monitoring.measurementGroup

onap.datatypes.monitoring.measurementGroup:
  derived_from: tosca.datatypes.Root
  properties:
    measurementTypes:
      type: list
      description: List of measurement types
      required: true
      default: []
      entry_schema:
        type: onap.datatypes.monitoring.measurementTypes
    managedObjectDNsBasic:
      type: list
      description: List of managed object distinguished names
      required: true
      default: []
      entry_schema:
        type: onap.datatypes.monitoring.managedObjectDNSBasics

onap.datatypes.monitoring.measurementTypes:
  derived_from: tosca.datatypes.Root
  properties:
    measurementType:
      type: map
      description: Measurement type object
      required: true
      entry_schema:
        type: onap.dataypes.monitoring.measurementType

onap.datatypes.monitoring.measurementType:
  derived_from: tosca.datatypes.Root
  properties:
    measurementType:
      type: string
      description: Measurement type
      required: true

onap.datatypes.monitoring.managedObjectDNsBasics:
  derived_from: tosca.datatypes.Root
  properties:
    managedObjectDNsBasic:
      type: map
      description: Managed object distinguished name object
      required: true
      entry_schema:
        type: onap.dataypes.monitoring.managedObjectDNsBasic

onap.datatypes.monitoring.managedObjectDNsBasic:
  derived_from: tosca.datatypes.Root
  properties:
    DN:
      type: string
      description: Managed object distinguished name
      required: true

### Data types used by Policy TCA model for closed loop ###

onap.datatypes.monitoring.metricsPerEventName:
  derived_from: tosca.datatypes.Root
  properties:
    controlLoopSchemaType:
      constraints:
        - valid_values:
            - VM
            - VNF
      description: "Specifies Control Loop Schema Type for the event Name e.g. VNF, VM"
      required: true
      type: string
    eventName:
      description: "Event name to which thresholds need to be applied"
      required: true
      type: string
    policyName:
      description: "TCA Policy Scope Name"
      required: true
      type: string
    policyScope:
      description: "TCA Policy Scope"
      required: true
      type: string
    policyVersion:
      description: "TCA Policy Scope Version"
      required: true
      type: string
    thresholds:
      description: "Thresholds associated with eventName"
      entry_schema:
        type: onap.datatypes.monitoring.thresholds
      required: true
      type: list

onap.datatypes.monitoring.tca_policy:
  derived_from: tosca.datatypes.Root
  properties:
    domain:
      constraints:
        - equal: measurementsForVfScaling
      default: measurementsForVfScaling
      description: "Domain name to which TCA needs to be applied"
      required: true
      type: string
    metricsPerEventName:
      description: "Contains eventName and threshold details that need to be applied to given eventName"
      entry_schema:
        type: onap.datatypes.monitoring.metricsPerEventName
      required: true
      type: list

onap.datatypes.monitoring.thresholds:
  derived_from: tosca.datatypes.Root
  properties:
    closedLoopControlName:
      description: "Closed Loop Control Name associated with the threshold"
      required: true
      type: string
    closedLoopEventStatus:
      constraints:
        - valid_values:
            - ONSET
            - ABATED
      description: "Closed Loop Event Status of the threshold"
      required: true
      type: string
    direction:
      constraints:
        - valid_values:
            - LESS
            - LESS_OR_EQUAL
            - GREATER
            - GREATER_OR_EQUAL
            - EQUAL
      description: "Direction of the threshold"
      required: true
      type: string
    fieldPath:
      constraints:
        - valid_values:
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedTotalPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedOctetsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedUnicastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedMulticastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedBroadcastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedDiscardedPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedErrorPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedTotalPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedOctetsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedUnicastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedMulticastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedBroadcastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedDiscardedPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].receivedErrorPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedTotalPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedOctetsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedUnicastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedMulticastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedBroadcastPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedDiscardedPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedErrorPacketsDelta"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedTotalPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedOctetsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedUnicastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedMulticastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedBroadcastPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedDiscardedPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.vNicPerformanceArray[*].transmittedErrorPacketsAccumulated"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuIdle"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuUsageInterrupt"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuUsageNice"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuUsageSoftIrq"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuUsageSteal"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuUsageSystem"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].cpuWait"
            - "$.event.measurementsForVfScalingFields.cpuUsageArray[*].percentUsage"
            - "$.event.measurementsForVfScalingFields.meanRequestLatency"
            - "$.event.measurementsForVfScalingFields.memoryUsageArray[*].memoryBuffered"
            - "$.event.measurementsForVfScalingFields.memoryUsageArray[*].memoryCached"
            - "$.event.measurementsForVfScalingFields.memoryUsageArray[*].memoryConfigured"
            - "$.event.measurementsForVfScalingFields.memoryUsageArray[*].memoryFree"
            - "$.event.measurementsForVfScalingFields.memoryUsageArray[*].memoryUsed"
            - "$.event.measurementsForVfScalingFields.additionalMeasurements[*].arrayOfFields[0].value"
      description: "Json field Path as per CEF message which needs to be analyzed for TCA"
      required: true
      type: string
    severity:
      constraints:
        - valid_values:
            - CRITICAL
            - MAJOR
            - MINOR
            - WARNING
            - NORMAL
      description: "Threshold Event Severity"
      required: true
      type: string
    thresholdValue:
      description: "Threshold value for the field Path inside CEF message"
      required: true
      type: integer
    version:
      description: "Version number associated with the threshold"
      required: true
      type: string

### Data types used by Policy Restconf Collector ###

onap.datatypes.monitoring.rcc_policy:
  derived_from: tosca.datatypes.Root
  properties:
    controller_name:
      type: string
      description: Name of controller
      required: true
    controller_restapiUrl:
      type: string
      description: Controller's ip and port
      required: true
    controller_restapiUser:
      type: string
      description: Controller's username
      required: true
    controller_restapiPassword:
      type: string
      description: Controller's password
      required: true
    controller_accessTokenUrl:
      type: string
      description: URL to get access token
      required: true
    controller_accessTokenFile:
      type: string
      description: Access token file path
      required: true
    controller_accessTokenMethod:
      type: string
      description: Access token method POST/GET/PUT etc
      required: true
      constraints:
        - valid_values: [ post, get, put]
    controller_subsMethod:
      type: string
      description: Subscription method POST/GET/PUT etc
      required: true
      default: post
      constraints:
        - valid_values: [ post, get, put]
    controller_subscriptionUrl:
      type: string
      description: URL to establish subscription
      required: true
    controller_disableSsl:
      type: boolean
      description: Option to disable ssl
      required: true
      default: true
    event_details:
      type: list
      description: event details
      required: true
      entry_schema:
        type : onap.datatypes.monitoring.rcc_event_details

onap.datatypes.monitoring.rcc_event_details:
  derived_from: tosca.datatypes.Root
  properties:
    event_name:
      type: string
      description: event name
      required: true
    event_description:
      type: string
      description: description of event
      required: false
    event_sseventUrlEmbed:
      type: boolean
      description: Whether SSE url is embedded in subscription response
      required: true
      default: true
    event_sseventsField:
      type: string
      description: Field name to access SSE url in subscription response
      required: true
    event_sseventsUrl:
      type: string
      description: Explicit SSE url
      required: true
    event_subscriptionTemplate:
      type: string
      description: Subscription template file path
      required: true
    event_unSubscriptionTemplate:
      type: string
      description: Unsubscription template file path
      required: false
    event_ruleId:
      type: integer
      description: Rule Id
      required: false
    modifyData:
      type: boolean
      description: Whether to modify the received SSE event
      required: true
      default: false
    modifyMethod:
      type: string
      description: The java method name to modify data
      required: false
    userData:
      type: string
      description: The user specific data
      required: false

##### Partner service domain datatypes ######

onap.datatypes.partner.access_details:
  derived_from: tosca.datatypes.Root
  properties:
    addressId:
      type: string
      description: id of the site
      required: true
    dsl_stability_profile:
      type: string
      description: profile of stability
      required: false
      default: standard
      constraints:
        - valid_values:
            - standard
            - stable
    partner_priorty_assist:
      type: boolean
      description: assistance flag
      required: false
      default: true
    battery_backup:
      type: boolean
      description: backup requirement flag
      required: false
      default: true
    central_splitter:
      type: boolean
      description: applicable to FTTN service
      required: false
      default: true
    service_restoration_sla:
      type: string
      description: This is the service restoration SLA from an partner perspective.
      required: false
      default: Standard
      constraints:
        - valid_values:
            - Standard
            - Enhanced

onap.datatypes.partner.bandwidth:
  derived_from: tosca.datatypes.Root
  properties:
    bandwidth_type:
      type: string
      description: type of bandwidth
      required: true
      default: standard
      constraints:
        - valid_values:
            - standard
            - guaranteed
    downstream:
      type: string
      description: down speed
      required: true
      constraints:
        - valid_values:
            - 128
            - 512
            - 1
            - 2
            - 5
            - 10
            - 20
            - 25
            - 30
            - 40
            - 50
            - 100
            - 250
            - 500
            - 1000
    upstream:
      type: string
      description: up speed
      required: false
      constraints:
        - valid_values:
            - 128
            - 512
            - 1
            - 2
            - 5
            - 10
            - 20
            - 25
            - 30
            - 40
            - 50
            - 100
            - 250
            - 500
            - 1000
    units:
      type: string
      description: unit of speed
      required: true
      constraints:
        - valid_values:
            - k
            - M
    service_alias:
      type: string
      description: 16 digit id
      required: false

onap.datatypes.partner.service_details:
  derived_from: tosca.datatypes.Root
  properties:
    bandwidth:
      type: onap.datatypes.partner.bandwidth
      description: bandwidth details for access
      required: false
    line_of_business:
      type: string
      description: LOB
      required: false
      constraints:
        - valid_values:
            - CONSUMER
            - WHOLESALE
            - BUSINESS
    access_details:
      type: onap.datatypes.partner.access_details
      required: false

onap.datatypes.partner.sppartner_details:
  derived_from: tosca.datatypes.Root
  properties:
    partner_url:
      type: string
      description: Partner URL to access and provision the service
      required: false
    uuid:
      type: string
      description: UUID of the service definition defined in the partner catalog
      required: false
    auth_user:
      type: string
      description: Authentication  details to access the Service URL
      required: false
    auth_password:
      type: string
      description: Authentication  details to access the Service URL
      required: false
