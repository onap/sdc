tosca.artifacts.Root:
    description: This is the default (root) TOSCA Artifact Type definition that all other TOSCA base Artifact Types derive from.

tosca.artifacts.Deployment:
    derived_from: tosca.artifacts.Root
    description: This artifact type represents the parent type for all deployment artifacts in TOSCA. This class of artifacts typically represents a binary packaging of an application or service that is used to install/create or deploy it as part of a node's lifecycle.
    
tosca.artifacts.Deployment.Image:
    derived_from: tosca.artifacts.Deployment
    description: This artifact type represents a parent type for any "image" which is an opaque packaging of a TOSCA Node's deployment (whether real or virtual) whose contents are typically already installed and pre-configured (i.e., "stateful") and prepared to be run on a known target container.

tosca.artifacts.Deployment.Image.VM:
    derived_from: tosca.artifacts.Deployment
    description: This artifact represents the parent type for all Virtual Machine (VM) image and container formatted deployment artifacts. These images contain a stateful capture of a machine (e.g., server) including operating system and installed software along with any configurations and can be run on another machine using a hypervisor which virtualizes typical server (i.e., hardware) resources.

tosca.artifacts.nfv.SwImage:
    derived_from: tosca.artifacts.Deployment.Image
    description: describes the software image which is directly loaded on the virtualisation container realizing of the VDU or is to be loaded on a virtual

tosca.artifacts.Implementation:
    derived_from: tosca.artifacts.Root
    description: This artifact type represents the parent type for all implementation artifacts in TOSCA. These artifacts are used to implement operations of TOSCA interfaces either directly (e.g., scripts) or indirectly (e.g., config. files).
    
tosca.artifacts.Implementation.Bash:
    derived_from: tosca.artifacts.Implementation
    description: This artifact type represents a Bash script type that contains Bash commands that can be executed on the Unix Bash shell.

tosca.artifacts.Implementation.Python:
    derived_from: tosca.artifacts.Implementation
    description: This artifact type represents a Python file that contains Python language constructs that can be executed within a Python interpreter.

tosca.artifacts.Implementation.nfv.Mistral:
    derived_from: tosca.artifacts.Implementation
    description: artifacts for Mistral workflows
    mime_type: application/x-yaml
    file_ext: [ yaml ]
    
tosca.artifacts.File:
    derived_from: tosca.artifacts.Root
    description: This artifact type is used when an artifact definition needs to have its associated file simply treated as a file and no special handling/handlers are invoked (i.e., it is not treated as either an implementation or deployment artifact type).

tosca.artifacts.asd.deploymentItem:
    version: 0.1
    derived_from: tosca.artifacts.Root
    description: "Describes the artifact type of asd deployment item"
    file: "URI or path of the artifact"
    properties:
        item_id:
            description: "The identifier of this asd deployment item"
            required: true
            type: string
        artifact_type:
            description: >
                Specify artifact type.
            required: true
            type: string
            constraints:
                - valid_values: ["helm_chart", "helmfile", "crd", "terraform" ]
        deployment_order:
            description: >
                Specifies the deployment stage that the DeploymentArtifact belongs to.
                A lower value specifies that the DeploymentArtifact belongs to an earlier
                deployment stage. When this value is omitted, the deployment order
                will be decided by the orchestrator.
            required: false
            type: integer
        lifecycle_parameters:
            description: "list of parameters that can be overridden at deployment time "
            required: false
            type: list
            entry_schema:
                type: string