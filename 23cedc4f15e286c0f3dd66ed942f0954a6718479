{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_1e086090",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "Please format file with code style.",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9e4f90be",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a93c517_1e086090",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8359795d",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-03T12:19:04Z",
      "side": 1,
      "message": "license",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8307391d",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-03T13:06:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a93c517_8359795d",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_43f7f159",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-03T12:17:13Z",
      "side": 1,
      "message": "Consider using third parties or Files.walk.\n\nDo we have apache utils in the classpath? Use FileUtils.cleanDirectory(directory); \nOtherwise use Files.walk(Paths.get(\"C:/test/ABC/\"))\n                .filter(Files::isRegularFile)\n                .map(Path::toFile)\n                .forEach(File::delete);\nAnd maybe just Files.delete(path).",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_23042517",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-03T13:06:50Z",
      "side": 1,
      "message": "I donot want to use Streams here. Files.delete deletes just one file which is equivalent to file.delete(). do you see any benefit with Filed.delete(Path) over file.delete(). I donot see Sonar complaining on this method for anything BTW. Apache is not in dependencies list of this plugin. it is just a simple recursive function to delete a directory recursively.",
      "parentUuid": "5a93c517_43f7f159",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5ed6e8f2",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "1. Recursion is hard to follow , and should not be used when not required.\n2. Stream will reduce this function to 1-2 lines instead of 10.\n3.We already use stream API in BuildHelper. So why not here too?",
      "parentUuid": "5a93c517_23042517",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3e4c3cc8",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/ArtifactHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "removed recursion.\ndonot want to use streams here. no gains. let me know incase other concerns.",
      "parentUuid": "5a93c517_5ed6e8f2",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0399e91e",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/InitializationHelperMojo.java",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-03T12:17:13Z",
      "side": 1,
      "message": "error should be logged as errors, not debug. Please use logfetLog().error()",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fefd7409",
        "filename": "openecomp-be/tools/artifact-copy-plugin/src/main/java/org/openecomp/sdc/onboarding/util/InitializationHelperMojo.java",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-03T13:06:50Z",
      "side": 1,
      "message": "it is not a error condition for this usecase as per design. i applied debug.log() here just to suppress sonar warning. fallback is in place. log.error would unnecessarily add noise in the build.",
      "parentUuid": "5a93c517_0399e91e",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_befccc73",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "CodeStyle remark    \nOverload method should not be split.\nline 70 and 231\n getSnapshotSignatur",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fec5740a",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "amended accordingly. Done.",
      "parentUuid": "5a93c517_befccc73",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fe025471",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "Sonar remark - \nLambdas should be replaced with method references\n \nCode smell\n \nMinor\nsquid:S1612\n \nMethod/constructor references are more compact and readable than using lambdas, and are therefore preferred. Similarly, null checks can be replaced with references to the Objects::isNull and Objects::nonNull methods.\nNote that this rule is automatically disabled when the project\u0027s sonar.java.source is lower than 8.\nNoncompliant Code Example\nclass A {\n  void process(List\u003cA\u003e list) {\n    list.stream()\n      .map(a -\u003e a.\u003cString\u003egetObject())\n      .forEach(a -\u003e { System.out.println(a); });\n  }\n\n  \u003cT\u003e T getObject() {\n    return null;\n  }\n}\nCompliant Solution\nclass A {\n  void process(List\u003cA\u003e list) {\n    list.stream()\n      .map(A::\u003cString\u003egetObject)\n      .forEach(System.out::println);\n  }\n\n  \u003cT\u003e T getObject() {\n    return null;\n  }\n}",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_becfec28",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildHelper.java",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "Not sure how to handle it. its Minor so thinking of to live with Lambda. let me know incase of other concerns.",
      "parentUuid": "5a93c517_fe025471",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_de01986b",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildState.java",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "This function returns boolean. If fails you cannot continue.",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_ded438bf",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildState.java",
        "patchSetId": 7
      },
      "lineNbr": 196,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "does not matter here. this function returns false when directory is already present. fallback is in place. nothing to worry.",
      "parentUuid": "5a93c517_de01986b",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_63878db7",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildState.java",
        "patchSetId": 7
      },
      "lineNbr": 273,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-03T12:17:13Z",
      "side": 1,
      "message": "Log the error.",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1e03800e",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/BuildState.java",
        "patchSetId": 7
      },
      "lineNbr": 273,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-03T13:06:50Z",
      "side": 1,
      "message": "It is not a error condition as per usecase. in case of error a blank Hashmap suffice. since it is not a error so adding a log.error() woudld unnecessarily add the noise in the build flow and confuse the developers.",
      "parentUuid": "5a93c517_63878db7",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9ef3109f",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/PreCompileHelperMojo.java",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 2119
      },
      "writtenOn": "2018-06-04T06:13:41Z",
      "side": 1,
      "message": "CodeStyle remark\nDistance between variable \u0027instrumented\u0027 declaration and its first usage is 7, but allowed 3.  Consider making that variable final if you still need to store its value in advance (before method calls that might have side effects on the original value). (150:0) [VariableDeclarationUsageDistanceCheck]",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_9ed6b0c2",
        "filename": "openecomp-be/tools/compile-helper-plugin/src/main/java/org/openecomp/sdc/onboarding/PreCompileHelperMojo.java",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 2819
      },
      "writtenOn": "2018-06-04T08:06:46Z",
      "side": 1,
      "message": "made variable final as per suggestion. Done.",
      "parentUuid": "5a93c517_9ef3109f",
      "revId": "23cedc4f15e286c0f3dd66ed942f0954a6718479",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}