{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_9e48f02e",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "This can be final",
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fe5ed4e8",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 445,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s an equivalent of .size() \u003e 1, but rather of .size() \u003e 0. Take a list of size 1. The this line will pass, but the next one will throw an IndexOutOfBoundsException.",
      "range": {
        "startLine": 445,
        "startChar": 10,
        "endLine": 445,
        "endChar": 71
      },
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7e72c47d",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 446,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "Should be a constant (used multiple times).",
      "range": {
        "startLine": 446,
        "startChar": 11,
        "endLine": 446,
        "endChar": 20
      },
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_be584cfb",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 478,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "This can be a constant, too (used at least twice in this class).",
      "range": {
        "startLine": 478,
        "startChar": 13,
        "endLine": 478,
        "endChar": 24
      },
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_de5d18eb",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "Store the extension in a local variable instead of calculating it twice.",
      "range": {
        "startLine": 540,
        "startChar": 35,
        "endLine": 540,
        "endChar": 70
      },
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3e6c3c9c",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 749,
      "author": {
        "id": 329
      },
      "writtenOn": "2017-12-27T08:00:40Z",
      "side": 1,
      "message": "Isn\u0027t it the duplicate of the code at line 445 and on?",
      "range": {
        "startLine": 746,
        "startChar": 0,
        "endLine": 749,
        "endChar": 57
      },
      "revId": "658c4e3f494a6657b3ed984b2f400e4747c69e77",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}