{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_ae603d36",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/HeatToToscaUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 607,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "better to have generic method\npublic static Optional\u003cObject\u003e getResourceProperty(Resource resource, String propertyName)\n\nif exist return the value, if not return Optional.empty",
      "range": {
        "startLine": 607,
        "startChar": 26,
        "endLine": 607,
        "endChar": 52
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ee4875ce",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "please move this definition to org.openecomp.sdc.tosca.services.ToscaConstants\nunder \n//TOSCA Capability Ids",
      "range": {
        "startLine": 72,
        "startChar": 32,
        "endLine": 72,
        "endChar": 56
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_6e354545",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "This is heat data, please move this to HeatConstants",
      "range": {
        "startLine": 73,
        "startChar": 32,
        "endLine": 73,
        "endChar": 65
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_8e11c1ae",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 361,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "All logic should not be here, you will return Optional and check\nif optional.isPresent ... call to handleFabricConfiguration\nand all Fabric Configuration logic should be in the method\n\nAll this \"if\" handling here .. not clean code, cause to the code to be complex",
      "range": {
        "startLine": 361,
        "startChar": 21,
        "endLine": 361,
        "endChar": 33
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_0e4b71b1",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 376,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "use the new method, getResourceProperty\nif Optional.isPresent check\nif Object instance of Map (otherwise we can have casting exception) - handle\nelse - add warning to the logger (logger.warn) and skip the configuration \n\nIn general - we can have invalid heat, like string instead of map, we are checking it, if invalid we put warning and continue with the translation",
      "range": {
        "startLine": 376,
        "startChar": 51,
        "endLine": 376,
        "endChar": 77
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ee1f15b6",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "if you have have the key in the map with null value you will fail here, it will be containKey but the value will be null - you need to check it in the testing and see if you will failed, probably you will have NullPointerException",
      "range": {
        "startLine": 378,
        "startChar": 67,
        "endLine": 378,
        "endChar": 78
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ae127db2",
        "filename": "openecomp-be/lib/openecomp-sdc-translator-lib/openecomp-sdc-translator-core/src/main/java/org/openecomp/sdc/translator/services/heattotosca/impl/resourcetranslation/ResourceTranslationNovaServerImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 405,
      "author": {
        "id": 2871
      },
      "writtenOn": "2018-08-06T12:24:19Z",
      "side": 1,
      "message": "we don\u0027t return null in the code\nplease change the method to return Optional\u003cResource\u003e and retrun\nOptional.empty() or Optional.of(...)",
      "range": {
        "startLine": 405,
        "startChar": 19,
        "endLine": 405,
        "endChar": 23
      },
      "revId": "fa58cdad0507becb0d397bac3c73c75873ae751e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}