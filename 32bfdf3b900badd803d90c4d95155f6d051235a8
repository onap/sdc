{
  "comments": [
    {
      "key": {
        "uuid": "7dfff6b9_f8bf157a",
        "filename": "catalog-be/src/main/java/org/openecomp/sdc/be/info/GenericArtifactQueryInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 6614
      },
      "writtenOn": "2020-04-17T12:38:34Z",
      "side": 1,
      "message": "This class is also annotated with @AllArgsConstructor. Please correct me if I am wrong, but as it seems, with a NoArgsConstructor the class will be instantiated with all of its fields set to null, resulting in getters returning nulls. Is that correct?",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "32bfdf3b900badd803d90c4d95155f6d051235a8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88a9ab6a_a8758071",
        "filename": "catalog-be/src/main/java/org/openecomp/sdc/be/info/GenericArtifactQueryInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 5565
      },
      "writtenOn": "2020-04-17T12:45:09Z",
      "side": 1,
      "message": "The NoArgsConstructor creates a constructor with no arguments. If someone calls it, yes, the fields will not be set. But it does not overrides the AllArgsConstructor.\nThe NoArgsConstructor was the previous behavior removed by commit 8d82a514707fb0853d6a2c6d8f7408a872e727ca, Change-Id: I9be29d9c0d891039952178a3c3e1c3a2062d1382.\nWithout it the code breaks in some YAML parser required for this GAB.",
      "parentUuid": "7dfff6b9_f8bf157a",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "32bfdf3b900badd803d90c4d95155f6d051235a8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea61dd7_d9c07fd9",
        "filename": "catalog-be/src/main/java/org/openecomp/sdc/be/info/GenericArtifactQueryInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 6614
      },
      "writtenOn": "2020-04-17T12:48:49Z",
      "side": 1,
      "message": "I see, thank you for your answer. Could you please indicate me which part of the code breaks if we remove this annotation? Ideally, we should avoid instantiating classes with what looks like an invalid state (At least that\u0027s how I see it but I might be wrong). I guess, if the change is too big, this could be addressed later.",
      "parentUuid": "88a9ab6a_a8758071",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "32bfdf3b900badd803d90c4d95155f6d051235a8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e79e891c_0d0a1a28",
        "filename": "catalog-be/src/main/java/org/openecomp/sdc/be/info/GenericArtifactQueryInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 5565
      },
      "writtenOn": "2020-04-17T13:02:53Z",
      "side": 1,
      "message": "There\u0027s been a week that I worked on this and I did not register the exactly point of failure.\nBut you could take a look on the Jira and in the logs of recent ui sanity test runs: \n- https://logs.onap.org/production/vex-yul-ecomp-jenkins-1/sdc-master-csit-uiSanity-testng/1195/\n- https://logs.onap.org/production/vex-yul-ecomp-jenkins-1/sdc-master-csit-uiSanity-testng/1195/SDC_UI_Extent_Report.html.gz\nI could not find the precise place right now without retesting it, but by the message in the test addPmDictionaryDeploymentArtifactToPnfAndCheckMagnifierTest or addVesEventsDeploymentArtifactToVfAndCheckMagnifierTest you can see that something requires the default constructor to deserialize some information in that Object.\nI\u0027m not sure if the AllArgsConstructor is also required though.",
      "parentUuid": "2ea61dd7_d9c07fd9",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "32bfdf3b900badd803d90c4d95155f6d051235a8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94a16d9_bc041994",
        "filename": "catalog-be/src/main/java/org/openecomp/sdc/be/info/GenericArtifactQueryInfo.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 6614
      },
      "writtenOn": "2020-04-17T14:18:10Z",
      "side": 1,
      "message": "I\u0027m sorry to bother you with this again but I cannot find any stack trace mentioning that something requires a default contructor to deserialize information in this object. I looked at different places, including the console.log.gz of the build, the links you provided, the issue, and at the failing tests mentioned in https://jenkins.onap.org/job/sdc-master-csit-uiSanity-testng/1195/. So far I only found an assertion error (https://logs.onap.org/production/vex-yul-ecomp-jenkins-1/sdc-master-csit-uiSanity-testng/1195/logs/sdc-ui-tests/target/).\n\nI see that this has been reviewed several times and I am very new to the codebase. I am just trying to learn a bit about it. If this is too much of a hassle for you, then no problem we can consider this comment as closed. I hope this is ok.",
      "parentUuid": "e79e891c_0d0a1a28",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "32bfdf3b900badd803d90c4d95155f6d051235a8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}