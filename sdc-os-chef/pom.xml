<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<artifactId>sdc-os-chef</artifactId>

	<parent>
		<groupId>org.openecomp.sdc</groupId>
		<artifactId>sdc-main</artifactId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>


	<properties>
		<docker.tag>${project.version}-${maven.build.timestamp}</docker.tag>
		<docker.latest.tag>${project.version}-latest</docker.latest.tag>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<basedir>${project.basedir}</basedir>
					<includes>
						<include>sdc-backend/Dockerfile</include>
						<include>sdc-frontend/Dockerfile</include>
						<include>scripts/docker_run.sh</include>
					</includes>
					<replacements>
						<replacement>
							<token>__SDC-RELEASE__</token>
							<value>${project.version}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker-staging</id>
			<properties>
				<docker.tag>${project.version}-STAGING-${maven.build.timestamp}</docker.tag>
				<docker.latest.tag>${project.version}-STAGING-latest</docker.latest.tag>
			</properties>
		</profile>

		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>copy-resources-be</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/sdc-backend</outputDirectory>
									<resources>
										<resource>
											<directory>${project.parent.basedir}/openecomp-be/api/openecomp-sdc-rest-webapp/onboarding-rest-war/target</directory>
											<includes>
												<include>onboarding-be-${project.version}.war</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources-fe</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/sdc-frontend</outputDirectory>
									<resources>
										<resource>
											<directory>${project.parent.basedir}/openecomp-ui/target</directory>
											<includes>
												<include>onboarding-fe-${project.version}.war</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>



					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.19.1</version>

						<configuration>
							<verbose>true</verbose>
							<apiVersion>1.23</apiVersion>

							<images>

								<!-- Build backend image -->
								<image>
									<name>openecomp/sdc-backend</name>
									<alias>sdc-backend</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-backend</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

								<!-- Build frontend image -->
								<image>
									<name>openecomp/sdc-frontend</name>
									<alias>sdc-frontend</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-frontend</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

								<!-- Build elastic search image -->
								<image>
									<name>openecomp/sdc-elasticsearch</name>
									<alias>sdc-elasticsearch</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-elasticsearch</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

								<!-- Build kibana image -->
								<image>
									<name>openecomp/sdc-kibana</name>
									<alias>sdc-kibana</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-kibana</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

								<!-- Build cassandra image -->
								<image>
									<name>openecomp/sdc-cassandra</name>
									<alias>sdc-cassandra</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-cassandra</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

								<!-- Build sanity image -->
								<image>
									<name>openecomp/sdc-sanity</name>
									<alias>sdc-sanity</alias>
									<build>
										<cleanup>try</cleanup>
										<dockerFileDir>${project.basedir}/sdc-sanity</dockerFileDir>
										<tags>
											<tag>${docker.tag}</tag>
											<tag>${docker.latest.tag}</tag>
											<tag>1.1-STAGING-latest</tag>
										</tags>
									</build>
								</image>

							</images>
						</configuration>
						<executions>
							<execution>
                                <id>clean-images</id>
                                <phase>pre-clean</phase>
                                <goals>
                                <goal>remove</goal>
                                </goals>
                                <configuration>
                                <removeAll>true</removeAll>
                                <image>openecomp/sdc-backend,openecomp/sdc-frontend,openecomp/sdc-elasticsearch,openecomp/sdc-kibana,openecomp/sdc-sanity</image>
                                </configuration>
							</execution>

							<execution>
								<id>generate-images</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>

							<execution>
                                <id>push-images</id>
                                <phase>deploy</phase>
                                <goals>
									<goal>build</goal>
									<goal>push</goal>
                                </goals>
                                <configuration>
                                <image>openecomp/sdc-backend,openecomp/sdc-frontend,openecomp/sdc-elasticsearch,openecomp/sdc-kibana,openecomp/sdc-sanity</image>
                                </configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
